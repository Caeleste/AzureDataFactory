{
	"name": "Blob to SQL",
	"properties": {
		"activities": [
			{
				"name": "Lookup Filename",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[dbo].[spDmsToCore_GetFilename]",
						"storedProcedureParameters": {
							"Filename": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.Filename",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00"
					},
					"dataset": {
						"referenceName": "GenericAzureSQLDatabase",
						"type": "DatasetReference",
						"parameters": {
							"table": {
								"value": "Config",
								"type": "Expression"
							},
							"secret": {
								"value": "@pipeline().parameters.secretConfiguration",
								"type": "Expression"
							}
						}
					}
				}
			},
			{
				"name": "If File Found",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Lookup Filename",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@contains(activity('Lookup Filename').output,'firstrow')",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Backup file",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true
									}
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "FileInBlob_adf_dev",
									"type": "DatasetReference",
									"parameters": {
										"container": {
											"value": "@pipeline().parameters.sourceContainer",
											"type": "Expression"
										},
										"directory": {
											"value": "@pipeline().parameters.sourceFolder",
											"type": "Expression"
										},
										"file": {
											"value": "@pipeline().parameters.Filename",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "FileInBlob_adf_dev",
									"type": "DatasetReference",
									"parameters": {
										"container": {
											"value": "@pipeline().parameters.sourceContainer",
											"type": "Expression"
										},
										"directory": {
											"value": "@concat(pipeline().parameters.backupFolder,'/Others/',formatDateTime(utcnow(),'yyyyMMdd'))",
											"type": "Expression"
										},
										"file": {
											"value": "@pipeline().parameters.Filename",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Delete Source File",
							"type": "Delete",
							"dependsOn": [
								{
									"activity": "Backup file",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "FileInBlob_adf_dev",
									"type": "DatasetReference",
									"parameters": {
										"container": {
											"value": "@pipeline().parameters.sourceContainer",
											"type": "Expression"
										},
										"directory": {
											"value": "@pipeline().parameters.sourceFolder",
											"type": "Expression"
										},
										"file": {
											"value": "@pipeline().parameters.Filename",
											"type": "Expression"
										}
									}
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								}
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Backup file dms",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Copy CSV to Staging",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true
									}
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "FileInBlob_adf_dev",
									"type": "DatasetReference",
									"parameters": {
										"container": {
											"value": "@pipeline().parameters.sourceContainer",
											"type": "Expression"
										},
										"directory": {
											"value": "@pipeline().parameters.sourceFolder",
											"type": "Expression"
										},
										"file": {
											"value": "@pipeline().parameters.Filename",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "FileInBlob_adf_dev",
									"type": "DatasetReference",
									"parameters": {
										"container": {
											"value": "@pipeline().parameters.sourceContainer",
											"type": "Expression"
										},
										"directory": {
											"value": "@concat(pipeline().parameters.backupFolder,'/',activity('Lookup Filename').output.firstrow.BackupFolder,'/',formatDateTime(convertFromUtc(utcnow(),'SE Asia Standard Time'),'yyyyMMdd'))",
											"type": "Expression"
										},
										"file": {
											"value": "@concat(formatDateTime(convertFromUtc(utcnow(),'SE Asia Standard Time'),'yyyyMMdd_hhmmss'),'_',pipeline().parameters.Filename)",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Delete Source File dms",
							"type": "Delete",
							"dependsOn": [
								{
									"activity": "Backup file dms",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "FileInBlob_adf_dev",
									"type": "DatasetReference",
									"parameters": {
										"container": {
											"value": "@pipeline().parameters.sourceContainer",
											"type": "Expression"
										},
										"directory": {
											"value": "@pipeline().parameters.sourceFolder",
											"type": "Expression"
										},
										"file": {
											"value": "@pipeline().parameters.Filename",
											"type": "Expression"
										}
									}
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								}
							}
						},
						{
							"name": "Copy CSV to Staging",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "AzureSqlSink",
									"tableOption": "autoCreate"
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "ZipFile_adf_dev",
									"type": "DatasetReference",
									"parameters": {
										"container": {
											"value": "@pipeline().parameters.sourceContainer",
											"type": "Expression"
										},
										"directory": {
											"value": "@pipeline().parameters.sourceFolder",
											"type": "Expression"
										},
										"filename": {
											"value": "@pipeline().parameters.Filename",
											"type": "Expression"
										},
										"deliminator": {
											"value": "|",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "GenericAzureSQLDatabase",
									"type": "DatasetReference",
									"parameters": {
										"table": {
											"value": "@activity('Lookup Filename').output.firstrow.StagingTable",
											"type": "Expression"
										},
										"secret": {
											"value": "@activity('Lookup Filename').output.firstrow.TargetKeySecret",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Execute Send Email fail to copy",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "Copy CSV to Staging",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "Sending Email",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"from": {
										"value": "@variables('emailFrom')",
										"type": "Expression"
									},
									"to": {
										"value": "@variables('emailTo')",
										"type": "Expression"
									},
									"message_id": {
										"value": "@guid()",
										"type": "Expression"
									},
									"subject": {
										"value": "@concat('Integration FAILED copy CSV ', pipeline().parameters.Filename, ' to Staging Table is error')",
										"type": "Expression"
									},
									"content": {
										"value": "@concat('Hi, This Integration when copy csv ', @pipeline().parameters.Filename, ' to ', @activity('Lookup Filename').output.firstrow.StagingTable)",
										"type": "Expression"
									},
									"Queue_id": {
										"value": "@variables('emailQueue')",
										"type": "Expression"
									},
									"cc": {
										"value": "@variables('emailCc')",
										"type": "Expression"
									},
									"bcc": {
										"value": "@variables('emailBcc')",
										"type": "Expression"
									},
									"attachments": " "
								}
							}
						}
					]
				}
			},
			{
				"name": "If Load SP not blank",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "If File Found",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@and(contains(activity('Lookup Filename').output,'firstrow'),not(equals(activity('Lookup Filename').output.firstrow.LoadSP,'')))",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Run Load SP",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": {
									"value": "@activity('Lookup Filename').output.firstrow.LoadSP",
									"type": "Expression"
								}
							},
							"linkedServiceName": {
								"referenceName": "GenericAzureSqlDatabase",
								"type": "LinkedServiceReference",
								"parameters": {
									"Secret": {
										"value": "@activity('Lookup Filename').output.firstrow.TargetKeySecret",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"sourceContainer": {
				"type": "string",
				"defaultValue": "dms"
			},
			"sourceFolder": {
				"type": "string",
				"defaultValue": "Unprocessed"
			},
			"backupFolder": {
				"type": "string",
				"defaultValue": "History"
			},
			"Filename": {
				"type": "string"
			},
			"secretConfiguration": {
				"type": "string",
				"defaultValue": "azure-sql-prd-core"
			}
		},
		"variables": {
			"emailTo": {
				"type": "String",
				"defaultValue": "andreas.herrinto@ccamatil.com"
			},
			"emailCc": {
				"type": "String"
			},
			"emailBcc": {
				"type": "String"
			},
			"emailFrom": {
				"type": "String",
				"defaultValue": "idn.adf.ReportIntegration@ccamatil.com"
			},
			"emailQueue": {
				"type": "String",
				"defaultValue": "664CDAFA44B642DDB511046AFC2C732A"
			}
		},
		"folder": {
			"name": "Production"
		},
		"annotations": []
	}
}