{
	"name": "eTax Send Email",
	"properties": {
		"activities": [
			{
				"name": "Get Pdfs in To Be Sent",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "File_in_idcbtap22",
						"type": "DatasetReference",
						"parameters": {
							"directory": {
								"value": "@concat(pipeline().parameters.sourceDirectory,'/To Be Sent')",
								"type": "Expression"
							},
							"filename": "*.pdf"
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "FileServerReadSettings",
						"recursive": true
					}
				}
			},
			{
				"name": "Check in Log",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Pdfs in To Be Sent",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Pdfs in To Be Sent').output.childItems",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Lookup Customer Info",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderStoredProcedureName": "spCustomer_GetEmailAndOperation",
									"storedProcedureParameters": {
										"CustomerNumber": {
											"value": {
												"value": "@split(item().name,'-')[3]",
												"type": "Expression"
											}
										}
									}
								},
								"dataset": {
									"referenceName": "GenericAzureSQLDatabase",
									"type": "DatasetReference",
									"parameters": {
										"table": "Customers",
										"secret": "azure-sql-dev-masterdata"
									}
								}
							}
						},
						{
							"name": "If Customer Info is found",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Lookup Customer Info",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@contains(activity('Lookup Customer Info').output,'firstrow')",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Update if customer info is not found",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "Exe Pipeline - Move to inappropriate file_copy1_copy1",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "spETaxFileLog_Error",
											"storedProcedureParameters": {
												"Error": {
													"value": {
														"value": "Customer Master is not found",
														"type": "Expression"
													},
													"type": "String"
												},
												"Filename": {
													"value": null,
													"type": "String"
												},
												"Folder": {
													"value": {
														"value": "Inappropriate File",
														"type": "Expression"
													},
													"type": "String"
												},
												"LastUpdateBy": {
													"value": {
														"value": "@pipeline().TriggerName",
														"type": "Expression"
													},
													"type": "String"
												},
												"NewFilename": {
													"value": {
														"value": "@item().name",
														"type": "Expression"
													},
													"type": "String"
												},
												"Status": {
													"value": {
														"value": "I",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "GenericAzureSqlDatabase",
											"type": "LinkedServiceReference",
											"parameters": {
												"Secret": "azure-sql-dev-core"
											}
										}
									},
									{
										"name": "Exe Pipeline - Move to inappropriate file_copy1_copy1",
										"type": "ExecutePipeline",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"pipeline": {
												"referenceName": "Copy or Move File idcbtap22",
												"type": "PipelineReference"
											},
											"waitOnCompletion": true,
											"parameters": {
												"sourceDirectory": {
													"value": "@concat(pipeline().parameters.sourceDirectory,'/To Be Sent')",
													"type": "Expression"
												},
												"sourceFilename": {
													"value": "@item().name",
													"type": "Expression"
												},
												"targetDirectory": {
													"value": "@concat(pipeline().parameters.sourceDirectory,'/Inappropriate File')",
													"type": "Expression"
												},
												"targetFilename": {
													"value": "@item().name",
													"type": "Expression"
												},
												"isMove": "true"
											}
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "Generate message Id - Status P",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "spETaxFileLog_GenerateMessageId",
											"storedProcedureParameters": {
												"CustomerNumber": {
													"value": {
														"value": "@activity('Lookup Customer Info').output.firstrow.CustomerNumber",
														"type": "Expression"
													},
													"type": "String"
												},
												"Email": {
													"value": {
														"value": "@activity('Lookup Customer Info').output.firstrow.Email",
														"type": "Expression"
													},
													"type": "String"
												},
												"NewFilename": {
													"value": {
														"value": "@item().name",
														"type": "Expression"
													},
													"type": "String"
												},
												"Operation": {
													"value": {
														"value": "@activity('Lookup Customer Info').output.firstrow.Operation",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "GenericAzureSqlDatabase",
											"type": "LinkedServiceReference",
											"parameters": {
												"Secret": "azure-sql-dev-core"
											}
										}
									},
									{
										"name": "Exe Pipeline - Move to Processing",
										"type": "ExecutePipeline",
										"dependsOn": [
											{
												"activity": "Generate message Id - Status P",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"pipeline": {
												"referenceName": "Copy or Move File idcbtap22",
												"type": "PipelineReference"
											},
											"waitOnCompletion": true,
											"parameters": {
												"sourceDirectory": {
													"value": "@concat(pipeline().parameters.sourceDirectory,'/To Be Sent')",
													"type": "Expression"
												},
												"sourceFilename": {
													"value": "@item().name",
													"type": "Expression"
												},
												"targetDirectory": {
													"value": "@concat(pipeline().parameters.sourceDirectory,'/To Be Sent/Sending')",
													"type": "Expression"
												},
												"targetFilename": {
													"value": "@item().name",
													"type": "Expression"
												},
												"isMove": {
													"value": "true",
													"type": "Expression"
												}
											}
										}
									}
								]
							}
						},
						{
							"name": "Lookup File in Log",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "If Customer Info is found",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderStoredProcedureName": "spCustomer_GetEmailAndOperation",
									"storedProcedureParameters": {
										"CustomerNumber": {
											"value": {
												"value": "@item().name",
												"type": "Expression"
											}
										}
									}
								},
								"dataset": {
									"referenceName": "GenericAzureSQLDatabase",
									"type": "DatasetReference",
									"parameters": {
										"table": "Customers",
										"secret": "azure-sql-dev-masterdata"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "Set json",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Get Pdfs in To Be Sent_copy1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "JSONMessage",
					"value": ""
				}
			},
			{
				"name": "PostMessage",
				"type": "AzureFunctionActivity",
				"dependsOn": [
					{
						"activity": "Set json",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"functionName": "PostMessage",
					"method": "POST",
					"body": {
						"value": "@variables('JSONMessage')",
						"type": "Expression"
					}
				},
				"linkedServiceName": {
					"referenceName": "CoreFunction",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Get Pdfs in To Be Sent_copy1",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "Check in Log",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "File_in_idcbtap22",
						"type": "DatasetReference",
						"parameters": {
							"directory": {
								"value": "@pipeline().parameters.sourceDirectory",
								"type": "Expression"
							},
							"filename": "*.*"
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "FileServerReadSettings",
						"recursive": true
					}
				}
			},
			{
				"name": "List All File need to send",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Check in Log",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource"
					},
					"dataset": {
						"referenceName": "GenericAzureSQLDatabase",
						"type": "DatasetReference",
						"parameters": {
							"table": "VW_eTaxFileLogToBeSent",
							"secret": "azure-sql-dev-core"
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "For each To Be Send files",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "List All File need to send",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('List All File need to send').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Copy file to blob",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "get status",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "Stored Procedure1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "FileServerReadSettings",
										"recursive": true
									}
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "File_in_idcbtap22",
									"type": "DatasetReference",
									"parameters": {
										"directory": {
											"value": "@pipeline().parameters.sourceDirectory",
											"type": "Expression"
										},
										"filename": {
											"value": "@item().NewFilename",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "FileInBlob",
									"type": "DatasetReference",
									"parameters": {
										"container": {
											"value": "etax",
											"type": "Expression"
										},
										"directory": {
											"value": "TempToBeSent",
											"type": "Expression"
										},
										"file": {
											"value": "@item().NewFilename",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "get status",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"queryTimeout": "02:00:00"
								},
								"dataset": {
									"referenceName": "GenericAzureSQLDatabase",
									"type": "DatasetReference",
									"parameters": {
										"table": "VW_eTaxFileLogToBeSent",
										"secret": "azure-sql-dev-core"
									}
								}
							}
						},
						{
							"name": "Stored Procedure1",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "get status",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[spETaxFileLog_ProcessSending]",
								"storedProcedureParameters": {
									"Messageid": {
										"value": null,
										"type": "String"
									},
									"NewFilename": {
										"value": {
											"value": "@activity('List All File need to send').output.name",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "GenericAzureSqlDatabase",
								"type": "LinkedServiceReference",
								"parameters": {
									"Secret": "azure-sql-dev-core"
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"sourceDirectory": {
				"type": "string",
				"defaultValue": "Dev\\Pdf"
			}
		},
		"variables": {
			"JSONMessage": {
				"type": "String"
			},
			"CustomerNumber": {
				"type": "String"
			}
		},
		"folder": {
			"name": "eTAX"
		},
		"annotations": []
	}
}