{
	"name": "SAM Users",
	"properties": {
		"activities": [
			{
				"name": "Copy from IaaS",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "if to Date blank",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "If from Date blank",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderStoredProcedureName": "[dbo].[spExport_Users]",
						"storedProcedureParameters": {
							"SyncFromDate": {
								"type": "DateTime",
								"value": {
									"value": "@variables('SyncDataFrom')",
									"type": "Expression"
								}
							},
							"SyncToDate": {
								"type": "DateTime",
								"value": {
									"value": "@variables('SyncDataTo')",
									"type": "Expression"
								}
							}
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"sqlWriterStoredProcedureName": "[dbo].[spSAM_Users_upsert]",
						"sqlWriterTableType": "typeSAM_Users",
						"storedProcedureTableTypeParameterName": "SAM_Users"
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "UserId",
									"type": "Guid"
								},
								"sink": {
									"name": "UserId",
									"type": "Guid"
								}
							},
							{
								"source": {
									"name": "UserName",
									"type": "String"
								},
								"sink": {
									"name": "UserName",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "FirstName",
									"type": "String"
								},
								"sink": {
									"name": "FirstName",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "LastName",
									"type": "String"
								},
								"sink": {
									"name": "LastName",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "PrimaryPhoneNumber",
									"type": "String"
								},
								"sink": {
									"name": "PrimaryPhoneNumber",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "SecondaryPhoneNumber",
									"type": "String"
								},
								"sink": {
									"name": "SecondaryPhoneNumber",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "PaymentAccess",
									"type": "Boolean"
								},
								"sink": {
									"name": "PaymentAccess",
									"type": "Boolean"
								}
							},
							{
								"source": {
									"name": "EmailOptIn",
									"type": "Boolean"
								},
								"sink": {
									"name": "EmailOptIn",
									"type": "Boolean"
								}
							},
							{
								"source": {
									"name": "CurrentCustomerSite",
									"type": "Int32"
								},
								"sink": {
									"name": "CurrentCustomerSite",
									"type": "Int32"
								}
							},
							{
								"source": {
									"name": "CurrentCustomerNumber",
									"type": "String"
								},
								"sink": {
									"name": "CurrentCustomerNumber",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "BDECustomerSite",
									"type": "Int32"
								},
								"sink": {
									"name": "BDECustomerSite",
									"type": "Int32"
								}
							},
							{
								"source": {
									"name": "BDECustomerNumber",
									"type": "String"
								},
								"sink": {
									"name": "BDECustomerNumber",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "RouteSite",
									"type": "Int32"
								},
								"sink": {
									"name": "RouteSite",
									"type": "Int32"
								}
							},
							{
								"source": {
									"name": "SapUserName",
									"type": "String"
								},
								"sink": {
									"name": "SapUserName",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "ModifiedDate",
									"type": "DateTime"
								},
								"sink": {
									"name": "ModifiedDate",
									"type": "DateTime"
								}
							},
							{
								"source": {
									"name": "CreatedDate",
									"type": "DateTime"
								},
								"sink": {
									"name": "CreatedDate",
									"type": "DateTime"
								}
							},
							{
								"source": {
									"name": "ExternalUserId",
									"type": "String"
								},
								"sink": {
									"name": "ExternalUserId",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "PinID",
									"type": "String"
								},
								"sink": {
									"name": "PinID",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "RoleId",
									"type": "Int32"
								},
								"sink": {
									"name": "RoleId",
									"type": "Int32"
								}
							},
							{
								"source": {
									"name": "Application",
									"type": "String"
								},
								"sink": {
									"name": "Application",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Status",
									"type": "Boolean"
								},
								"sink": {
									"name": "Status",
									"type": "Boolean"
								}
							},
							{
								"source": {
									"name": "LocationCode",
									"type": "String"
								},
								"sink": {
									"name": "LocationCode",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "PersonnelNumber",
									"type": "String"
								},
								"sink": {
									"name": "PersonnelNumber",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "SubLoc",
									"type": "String"
								},
								"sink": {
									"name": "SubLoc",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "PositionCode",
									"type": "Int32"
								},
								"sink": {
									"name": "PositionCode",
									"type": "Int32"
								}
							},
							{
								"source": {
									"name": "IsDelete",
									"type": "Boolean"
								},
								"sink": {
									"name": "IsDelete",
									"type": "Boolean"
								}
							}
						]
					}
				},
				"inputs": [
					{
						"referenceName": "Production_Sales_IaaS",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Production_Report_SAM_Users",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Update Last Sync Date",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy from IaaS",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[spImportFromSAM_UpsertLastSyncDate]",
					"storedProcedureParameters": {
						"ErrorMessage": {
							"value": null,
							"type": "String"
						},
						"LastSyncDate": {
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							},
							"type": "DateTimeOffset"
						},
						"Status": {
							"value": {
								"value": "@activity('Copy from IaaS').output.executionDetails[0].status",
								"type": "Expression"
							},
							"type": "String"
						},
						"SyncDataFrom": {
							"value": {
								"value": "@variables('SyncDataFrom')",
								"type": "Expression"
							},
							"type": "DateTimeOffset"
						},
						"SyncDataTo": {
							"value": {
								"value": "@variables('SyncDataTo')",
								"type": "Expression"
							},
							"type": "DateTimeOffset"
						},
						"TableName": {
							"value": {
								"value": "@variables('TableName')",
								"type": "Expression"
							},
							"type": "String"
						},
						"TotalRecords": {
							"value": {
								"value": "@activity('Copy from IaaS').output.rowsCopied",
								"type": "Expression"
							},
							"type": "Int32"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "IR2_REPORT_PRODUCTION",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Update Error Message",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy from IaaS",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[spImportFromSAM_UpsertLastSyncDate]",
					"storedProcedureParameters": {
						"ErrorMessage": {
							"value": {
								"value": "@activity('Copy from IaaS').error.message",
								"type": "Expression"
							},
							"type": "String"
						},
						"LastSyncDate": {
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							},
							"type": "DateTimeOffset"
						},
						"Status": {
							"value": "Error",
							"type": "String"
						},
						"SyncDataFrom": {
							"value": {
								"value": "@variables('SyncDataFrom')",
								"type": "Expression"
							},
							"type": "DateTimeOffset"
						},
						"SyncDataTo": {
							"value": {
								"value": "@variables('SyncDataTo')",
								"type": "Expression"
							},
							"type": "DateTimeOffset"
						},
						"TableName": {
							"value": {
								"value": "@variables('TableName')",
								"type": "Expression"
							},
							"type": "String"
						},
						"TotalRecords": {
							"value": null,
							"type": "Int32"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "IR2_REPORT_PRODUCTION",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Lookup Sync Date",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[dbo].[spImportFromSAM_GetLastSyncDate]",
						"storedProcedureParameters": {
							"TableName": {
								"type": "String",
								"value": {
									"value": "@variables('TableName')",
									"type": "Expression"
								}
							}
						}
					},
					"dataset": {
						"referenceName": "Production_Report_SAM_Customer",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "If from Date blank",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Lookup Sync Date",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(pipeline().parameters.SyncDataFrom, '-')",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "SyncDataFrom from parameter",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "SyncDataFrom",
								"value": {
									"value": "@pipeline().parameters.SyncDataFrom",
									"type": "Expression"
								}
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "SyncFromData from Table",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "SyncDataFrom",
								"value": {
									"value": "@activity('Lookup Sync Date').output.firstrow.SyncDataTo",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "if to Date blank",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Lookup Sync Date",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(pipeline().parameters.SyncDataTo, '-')",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "SyncDataTo from Parameter",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "SyncDataTo",
								"value": {
									"value": "@pipeline().parameters.SyncDataTo",
									"type": "Expression"
								}
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "SyncDataTo from now function",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "SyncDataTo",
								"value": {
									"value": "@utcnow()",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "Send Email Success",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Update Last Sync Date",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": "https://prod-27.australiaeast.logic.azure.com:443/workflows/220819d77298477f8a0756ce936c67fb/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=_OUOidu80WnQzFyTkqdbYFNc3O7aWKuSxlCoyKE3IUI",
					"method": "POST",
					"body": {
						"value": "{\n    \"DataFactoryName\": \"CCAIDAUESADF001\",\n    \"EmailTo\": \"andreas.herrinto@ccamatil.com; SONY.PRIYAMBODO@ccamatil.com\",\n    \"ErrorMessage\": \"This email from Azure Data Factory using Azure Logics\",\n    \"PipelineName\": \"11\",\n    \"Subject\": \"Test Email Azure Data Factory\"\n}",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Send Email Error",
				"type": "WebActivity",
				"dependsOn": [
					{
						"activity": "Update Error Message",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": "https://prod-27.australiaeast.logic.azure.com:443/workflows/220819d77298477f8a0756ce936c67fb/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=_OUOidu80WnQzFyTkqdbYFNc3O7aWKuSxlCoyKE3IUI",
					"method": "POST",
					"body": {
						"value": "{\n    \"DataFactoryName\": \"CCAIDAUESADF001\",\n    \"EmailTo\": \"andreas.herrinto@ccamatil.com; SONY.PRIYAMBODO@ccamatil.com\",\n    \"ErrorMessage\": \"This email from Azure Data Factory using Azure Logics\",\n    \"PipelineName\": \"11\",\n    \"Subject\": \"Test Email Azure Data Factory\"\n}",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"SyncDataFrom": {
				"type": "string",
				"defaultValue": "-"
			},
			"SyncDataTo": {
				"type": "string",
				"defaultValue": "-"
			}
		},
		"variables": {
			"TableName": {
				"type": "String",
				"defaultValue": "SAM_Users"
			},
			"SyncDataFrom": {
				"type": "String"
			},
			"SyncDataTo": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Production/Export To Reporting/from SAM"
		},
		"annotations": []
	}
}