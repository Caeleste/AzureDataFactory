{
	"name": "eTax Proses 1 file",
	"properties": {
		"activities": [
			{
				"name": "If file not is PDF",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Create Log in SQL",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@not(equals(last(split(pipeline().parameters.sourceFile,'.')),'pdf'))",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Exe Pipeline - Move to inappropriate file",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "Update Status Inappropriate",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "Copy or Move File",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"sourceDirectory": {
										"value": "@pipeline().parameters.sourceDirectory",
										"type": "Expression"
									},
									"sourceFilename": {
										"value": "@pipeline().parameters.sourceFile",
										"type": "Expression"
									},
									"targetDirectory": {
										"value": "@concat(pipeline().parameters.sourceDirectory,'/Inappropriate File')",
										"type": "Expression"
									},
									"targetFilename": {
										"value": "@pipeline().parameters.sourceFile",
										"type": "Expression"
									},
									"isMove": "true"
								}
							}
						},
						{
							"name": "Update Status Inappropriate",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "spETaxFileLog_Update",
								"storedProcedureParameters": {
									"Email": {
										"value": null,
										"type": "String"
									},
									"ErrorMessage": {
										"value": {
											"value": "File is not PDF",
											"type": "Expression"
										},
										"type": "String"
									},
									"Filename": {
										"value": {
											"value": "@pipeline().parameters.sourceFile",
											"type": "Expression"
										},
										"type": "String"
									},
									"Folder": {
										"value": {
											"value": "Inappropriate Folder",
											"type": "Expression"
										},
										"type": "String"
									},
									"LastUpdateBy": {
										"value": {
											"value": "@pipeline().TriggerName",
											"type": "Expression"
										},
										"type": "String"
									},
									"NewFilename": {
										"value": null,
										"type": "String"
									},
									"SentDate": {
										"value": null,
										"type": "DateTime"
									},
									"Status": {
										"value": {
											"value": "I",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "GenericAzureSqlDatabase",
								"type": "LinkedServiceReference",
								"parameters": {
									"Secret": "azure-sql-dev-core"
								}
							}
						}
					]
				}
			},
			{
				"name": "Lookup CCAI NPWP",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "If file not is PDF",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "spGetCcaiNpwp",
						"storedProcedureParameters": {
							"TaxNumber": {
								"value": {
									"value": "@split(pipeline().parameters.sourceFile,'-')[1]",
									"type": "Expression"
								}
							}
						}
					},
					"dataset": {
						"referenceName": "GenericAzureSQLDatabase",
						"type": "DatasetReference",
						"parameters": {
							"table": "Configuration",
							"secret": "azure-sql-dev-core"
						}
					}
				}
			},
			{
				"name": "Exe Pipeline - Move to inappropriate1",
				"description": "CCAI NPWP is not found",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Set Filename",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "Copy or Move File",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"sourceDirectory": {
							"value": "@pipeline().parameters.sourceDirectory",
							"type": "Expression"
						},
						"sourceFilename": {
							"value": "@pipeline().parameters.sourceFile",
							"type": "Expression"
						},
						"targetDirectory": {
							"value": "@concat(pipeline().parameters.sourceDirectory,'/Inappropriate File')",
							"type": "Expression"
						},
						"targetFilename": {
							"value": "@pipeline().parameters.sourceFile",
							"type": "Expression"
						},
						"isMove": "true"
					}
				}
			},
			{
				"name": "Lookup Invoice Info",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "If file not is PDF",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "spETax_GetInvoiceInfo",
						"storedProcedureParameters": {
							"TaxInvoice": {
								"value": {
									"value": "@split(pipeline().parameters.sourceFile,'-')[1]",
									"type": "Expression"
								}
							}
						}
					},
					"dataset": {
						"referenceName": "GenericAzureSQLDatabase",
						"type": "DatasetReference",
						"parameters": {
							"table": "Orders",
							"secret": "azure-sql-dev-sales"
						}
					}
				}
			},
			{
				"name": "Set Filename",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Lookup CCAI NPWP",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Lookup Invoice Info",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "entity",
					"value": {
						"value": "@concat(activity('Lookup CCAI NPWP').output.firstrow.data,'-',\nactivity('Lookup Invoice Info').output.firstrow.BillingDate,'-',\nactivity('Lookup Invoice Info').output.firstrow.CommercialInvoice,'-',\nactivity('Lookup Invoice Info').output.firstrow.CustomerNumber,'-',\nactivity('Lookup Invoice Info').output.firstrow.TaxInvoice,'-')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Lookup Customer Info",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Lookup Invoice Info",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "spCustomer_GetEmailAndOperation",
						"storedProcedureParameters": {
							"CustomerNumber": {
								"value": {
									"value": "@activity('Lookup Invoice Info').output.firstrow.CustomerNumber",
									"type": "Expression"
								}
							}
						}
					},
					"dataset": {
						"referenceName": "GenericAzureSQLDatabase",
						"type": "DatasetReference",
						"parameters": {
							"table": "Orders",
							"secret": "azure-sql-dev-sales"
						}
					}
				}
			},
			{
				"name": "Exe Pipeline - Move to inappropriate2",
				"description": "Customer Info fail to get",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Lookup Customer Info",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "Copy or Move File",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"sourceDirectory": {
							"value": "@pipeline().parameters.sourceDirectory",
							"type": "Expression"
						},
						"sourceFilename": {
							"value": "@pipeline().parameters.sourceFile",
							"type": "Expression"
						},
						"targetDirectory": {
							"value": "@concat(pipeline().parameters.sourceDirectory,'/Inappropriate File')",
							"type": "Expression"
						},
						"targetFilename": {
							"value": "@pipeline().parameters.sourceFile",
							"type": "Expression"
						},
						"isMove": "true"
					}
				}
			},
			{
				"name": "Exe Pipeline - Move to be sent",
				"description": "CCAI NPWP is not found",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Set Filename",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "Copy or Move File",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"sourceDirectory": {
							"value": "@pipeline().parameters.sourceDirectory",
							"type": "Expression"
						},
						"sourceFilename": {
							"value": "@pipeline().parameters.sourceFile",
							"type": "Expression"
						},
						"targetDirectory": {
							"value": "@concat(pipeline().parameters.sourceDirectory,'/To be sent/')",
							"type": "Expression"
						},
						"targetFilename": {
							"value": "@variables('newFilename')",
							"type": "Expression"
						},
						"isMove": "true"
					}
				}
			},
			{
				"name": "Create Log in SQL",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "spETaxFileLog_Insert",
					"storedProcedureParameters": {
						"CreatedBy": {
							"value": {
								"value": "@pipeline().TriggerName",
								"type": "Expression"
							},
							"type": "String"
						},
						"ErrorMessage": {
							"value": null,
							"type": "String"
						},
						"Filename": {
							"value": {
								"value": "@pipeline().parameters.sourceFile",
								"type": "Expression"
							},
							"type": "String"
						},
						"Status": {
							"value": {
								"value": "C",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "GenericAzureSqlDatabase",
					"type": "LinkedServiceReference",
					"parameters": {
						"Secret": "azure-sql-dev-core"
					}
				}
			}
		],
		"parameters": {
			"sourceDirectory": {
				"type": "string",
				"defaultValue": "/dev/Pdf"
			},
			"sourceFile": {
				"type": "string",
				"defaultValue": "010706570201001-0100021927682470-031207392211000-20190731112502.pdf"
			}
		},
		"variables": {
			"entity": {
				"type": "String"
			}
		},
		"annotations": []
	}
}