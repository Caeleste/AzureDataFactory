{
	"name": "Copy or Move File idcbtap22",
	"properties": {
		"activities": [
			{
				"name": "If isMove then delete source file",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "If Condition1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@and(pipeline().parameters.isMove,activity('Is File Exists').output.exists)",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Delete source file",
							"type": "Delete",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "File_in_idcbtap22",
									"type": "DatasetReference",
									"parameters": {
										"directory": {
											"value": "@pipeline().parameters.sourceDirectory",
											"type": "Expression"
										},
										"filename": {
											"value": "@pipeline().parameters.sourceFilename",
											"type": "Expression"
										}
									}
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true
								}
							}
						}
					]
				}
			},
			{
				"name": "Is File Exists",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "File_in_idcbtap22",
						"type": "DatasetReference",
						"parameters": {
							"directory": {
								"value": "@pipeline().parameters.sourceDirectory",
								"type": "Expression"
							},
							"filename": {
								"value": "@pipeline().parameters.sourceFilename",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"exists"
					],
					"storeSettings": {
						"type": "FileServerReadSettings"
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "If Condition1",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Is File Exists",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@activity('Is File Exists').output.exists",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "Copy data to target",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "FileServerReadSettings",
										"recursive": true
									},
									"formatSettings": {
										"type": "BinaryReadSettings"
									}
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "FileServerWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "File_in_idcbtap22",
									"type": "DatasetReference",
									"parameters": {
										"directory": {
											"value": "@pipeline().parameters.sourceDirectory",
											"type": "Expression"
										},
										"filename": {
											"value": "@pipeline().parameters.sourceFilename",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "File_in_idcbtap22",
									"type": "DatasetReference",
									"parameters": {
										"directory": {
											"value": "@pipeline().parameters.targetDirectory",
											"type": "Expression"
										},
										"filename": {
											"value": "@pipeline().parameters.targetFilename",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			}
		],
		"parameters": {
			"sourceDirectory": {
				"type": "string"
			},
			"sourceFilename": {
				"type": "string"
			},
			"targetDirectory": {
				"type": "string"
			},
			"targetFilename": {
				"type": "string"
			},
			"isMove": {
				"type": "bool",
				"defaultValue": true
			}
		},
		"folder": {
			"name": "Master Template"
		},
		"annotations": []
	}
}