{
	"name": "Copy ZipCSV to SQL",
	"properties": {
		"description": "Copy CSV (Zipped) to SQL from blob storage",
		"activities": [
			{
				"name": "Copy blob to Table",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "If Table is Truncate",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"preCopyScript": {
							"value": "@{variables('truncate')}",
							"type": "Expression"
						},
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "ZipFile",
						"type": "DatasetReference",
						"parameters": {
							"container": {
								"value": "@pipeline().parameters.container",
								"type": "Expression"
							},
							"directory": {
								"value": "@pipeline().parameters.directory",
								"type": "Expression"
							},
							"filename": {
								"value": "@pipeline().parameters.file",
								"type": "Expression"
							},
							"deliminator": {
								"value": "@pipeline().parameters.deliminator",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "GenericAzureSQLDatabase",
						"type": "DatasetReference",
						"parameters": {
							"table": {
								"value": "@pipeline().parameters.staggingTable",
								"type": "Expression"
							},
							"secret": {
								"value": "@pipeline().parameters.secret",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "Move Blob to Success folder",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Set variable fail",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Set variable success",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "DelimitedTextSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": true,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "DelimitedTextReadSettings"
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobStorageWriteSettings"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "ZipFile",
						"type": "DatasetReference",
						"parameters": {
							"container": {
								"value": "@pipeline().parameters.container",
								"type": "Expression"
							},
							"directory": {
								"value": "@pipeline().parameters.directory",
								"type": "Expression"
							},
							"filename": {
								"value": "@pipeline().parameters.file",
								"type": "Expression"
							},
							"deliminator": {
								"value": "@pipeline().parameters.deliminator",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "CsvFile",
						"type": "DatasetReference",
						"parameters": {
							"container": "integration",
							"directory": {
								"value": "@variables('status')",
								"type": "Expression"
							},
							"filename": {
								"value": "@concat(pipeline().parameters.file,'_',formatDateTime(utcnow(),'yyyyMMdd-hhmmss'))",
								"type": "Expression"
							},
							"deliminator": ","
						}
					}
				]
			},
			{
				"name": "Set variable success",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Copy blob to Table",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "status",
					"value": "successed"
				}
			},
			{
				"name": "Set variable fail",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Copy blob to Table",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "status",
					"value": "failed"
				}
			},
			{
				"name": "If Table is Truncate",
				"type": "IfCondition",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@pipeline().parameters.isTruncate",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Set truncate table_copy1",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "truncate",
								"value": ""
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Set truncate table",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "truncate",
								"value": {
									"value": "@{concat('TRUNCATE TABLE ',pipeline().parameters.staggingTable)}",
									"type": "Expression"
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"container": {
				"type": "string",
				"defaultValue": "integration"
			},
			"directory": {
				"type": "string",
				"defaultValue": "zipped"
			},
			"file": {
				"type": "string",
				"defaultValue": "SendUserGps.zip"
			},
			"deliminator": {
				"type": "string",
				"defaultValue": "|"
			},
			"staggingTable": {
				"type": "string",
				"defaultValue": "Stagging_DMSUserGps"
			},
			"spProcess": {
				"type": "string",
				"defaultValue": "spProcess_DmsUserGps"
			},
			"secret": {
				"type": "string",
				"defaultValue": "azure-sql-prd-report"
			},
			"isTruncate": {
				"type": "bool",
				"defaultValue": false
			}
		},
		"variables": {
			"status": {
				"type": "String"
			},
			"truncate": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Master"
		},
		"annotations": []
	}
}