{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ccaidauesadf001"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Dev_MasterData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "IR2_MASTERDATA_DEV",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Development"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dev_MasterData_CustomerAdditionals')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "IR2_MASTERDATA_DEV",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Development"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CustomerNumber",
						"type": "varchar"
					},
					{
						"name": "SuppressedDate",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "SuppressedCode",
						"type": "varchar"
					},
					{
						"name": "DistributionCenterFlag",
						"type": "varchar"
					},
					{
						"name": "SalesOfficeArea",
						"type": "varchar"
					},
					{
						"name": "CustomerCategoryCode",
						"type": "varchar"
					},
					{
						"name": "CustomerStatus",
						"type": "varchar"
					},
					{
						"name": "ClosedDate",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "SubClusterCode",
						"type": "varchar"
					},
					{
						"name": "ModifiedDate",
						"type": "datetimeoffset",
						"scale": 7
					},
					{
						"name": "WholeSalerPlatinum",
						"type": "varchar"
					},
					{
						"name": "MITPaket",
						"type": "varchar"
					},
					{
						"name": "PromoPaket",
						"type": "varchar"
					},
					{
						"name": "NPDPaket",
						"type": "varchar"
					},
					{
						"name": "DMSReserve1",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "CustomerSuppressions"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FileInBlob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "string"
					},
					"directory": {
						"type": "string"
					},
					"file": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Blob Storage"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().file",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().directory",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/File_in_idcbtap22')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "eTaxFileSource",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"directory": {
						"type": "string"
					},
					"filename": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Binary"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().directory",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/GenericAzureSQLDatabase')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "GenericAzureSqlDatabase",
					"type": "LinkedServiceReference",
					"parameters": {
						"Secret": {
							"value": "@dataset().secret",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"table": {
						"type": "string"
					},
					"secret": {
						"type": "string"
					}
				},
				"folder": {
					"name": "SQL"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "",
					"table": {
						"value": "@dataset().table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/GenericSqlServer_CCAIDWPRDB004')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "GenericSqlServer_CCAIDWPRDB004",
					"type": "LinkedServiceReference",
					"parameters": {
						"secret": {
							"value": "@dataset().secret",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"secret": {
						"type": "string"
					},
					"table": {
						"type": "string"
					}
				},
				"folder": {
					"name": "SQL"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"table": {
						"value": "@dataset().table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PdfFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "eTaxFileSource",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Binary"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"folderPath": "D:\\Dev\\Pdf"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Production_MasterData_IaaS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "IaaS_MASTERDATA_PRODUCTION",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Production_Sales_IaaS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "IaaS_SALES_PRODUCTION",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Production"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SFTP_DMS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SFTP_DMS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"directory": {
						"type": "string"
					},
					"filename": {
						"type": "string"
					}
				},
				"folder": {
					"name": "SFTP"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().directory",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SFTP_HR')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SFTP_HR",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"directory": {
						"type": "string"
					},
					"filename": {
						"type": "string"
					}
				},
				"folder": {
					"name": "SFTP"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().directory",
							"type": "Expression"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ZipFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container": {
						"type": "string"
					},
					"directory": {
						"type": "string"
					},
					"filename": {
						"type": "string"
					},
					"deliminator": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Blob Storage"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().directory",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().container",
							"type": "Expression"
						}
					},
					"columnDelimiter": {
						"value": "@dataset().deliminator",
						"type": "Expression"
					},
					"compressionCodec": "ZipDeflate",
					"compressionLevel": "Optimal",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ZipInSFTP')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "CSV in ZIP in SFTP",
				"linkedServiceName": {
					"referenceName": "SFTP_DMS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"directory": {
						"type": "string"
					},
					"filename": {
						"type": "string"
					},
					"column_deliminator": {
						"type": "string"
					}
				},
				"folder": {
					"name": "SFTP"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "SftpLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().directory",
							"type": "Expression"
						}
					},
					"columnDelimiter": {
						"value": "@dataset().column_deliminator",
						"type": "Expression"
					},
					"compressionCodec": "ZipDeflate",
					"compressionLevel": "Optimal",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\"",
					"compression": {
						"type": "ZipDeflate",
						"level": "Optimal"
					}
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CORE_DeleteNotification')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "CORE_DeleteNotification",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2019-11-01T19:00:00.000Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateInvalidStatus_DataSubmitStaging')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "UpdateInvalidStatus_DataSubmitStaging",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 5,
						"startTime": "2019-08-23T07:56:00.000Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sending Email')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Send Email",
						"type": "AzureFunctionActivity",
						"dependsOn": [
							{
								"activity": "Set json Message",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"functionName": "PostMessage",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "@json(variables('jsonBody'))",
								"type": "Expression"
							}
						},
						"linkedServiceName": {
							"referenceName": "CoreFunction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set json Message",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "jsonBody",
							"value": {
								"value": "@replace(replace(replace(replace(replace(replace(variables('templateBody'),'~from~',pipeline().parameters.from),'~to~',pipeline().parameters.to),'~SUBJECT~',pipeline().parameters.subject),'~CONTENT~',pipeline().parameters.content),'~MESSAGEGUID~',pipeline().parameters.message_id),'~QUEUEGUID~',pipeline().parameters.Queue_id)",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"from": {
						"type": "string",
						"defaultValue": "idn.adf@ccamatil.com"
					},
					"to": {
						"type": "string",
						"defaultValue": "andreas.herrinto@ccamatil.com"
					},
					"message_id": {
						"type": "string",
						"defaultValue": "0C0885AB-5570-42C0-ADF3-7D1235D54C4F"
					},
					"subject": {
						"type": "string",
						"defaultValue": "Email From ADF"
					},
					"content": {
						"type": "string",
						"defaultValue": "Ini email from adf"
					},
					"Queue_id": {
						"type": "string",
						"defaultValue": "6a41bee55a9a45a3903b804beb5f97d8"
					}
				},
				"variables": {
					"jsonBody": {
						"type": "String"
					},
					"templateBody": {
						"type": "String",
						"defaultValue": "'{   \"queue_id\": \"~QUEUEGUID~\",   \"message\": {     \"type\": \"email\",     \"message_id\": \"~MESSAGEGUID~\",     \"from\": \"~from~\",     \"to\": \"~to~\",     \"cc\": \"\",     \"bcc\": \"\",     \"subject\": \"~SUBJECT~\",     \"content\": \"~CONTENT~\",     \"attachment\": []   } }'"
					}
				},
				"folder": {
					"name": "Master Template"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy CSV to SQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy CSV (Zipped) to SQL from blob storage",
				"activities": [
					{
						"name": "If file zipped",
						"type": "IfCondition",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@pipeline().parameters.isZipped",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Copy csv to sql",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"preCopyScript": {
												"value": "@{if(pipeline().parameters.isTruncate,concat('IF OBJECT_ID (N''',pipeline().parameters.staggingTable,''', N''U'') IS NOT NULL TRUNCATE TABLE ',pipeline().parameters.staggingTable),'')}",
												"type": "Expression"
											},
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "CsvFile",
											"type": "DatasetReference",
											"parameters": {
												"container": {
													"value": "@pipeline().parameters.container",
													"type": "Expression"
												},
												"directory": {
													"value": "@pipeline().parameters.directory",
													"type": "Expression"
												},
												"filename": {
													"value": "@pipeline().parameters.file",
													"type": "Expression"
												},
												"deliminator": {
													"value": "@pipeline().parameters.deliminator",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "GenericAzureSQLDatabase",
											"type": "DatasetReference",
											"parameters": {
												"table": {
													"value": "@pipeline().parameters.staggingTable",
													"type": "Expression"
												},
												"secret": {
													"value": "@pipeline().parameters.secret",
													"type": "Expression"
												}
											}
										}
									]
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy zip to sql",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"preCopyScript": {
												"value": "@{if(pipeline().parameters.isTruncate,concat('IF OBJECT_ID (N''',pipeline().parameters.staggingTable,''', N''U'') IS NOT NULL TRUNCATE TABLE ',pipeline().parameters.staggingTable),'')}",
												"type": "Expression"
											},
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ZipFile",
											"type": "DatasetReference",
											"parameters": {
												"container": {
													"value": "@pipeline().parameters.container",
													"type": "Expression"
												},
												"directory": {
													"value": "@pipeline().parameters.directory",
													"type": "Expression"
												},
												"filename": {
													"value": "@pipeline().parameters.file",
													"type": "Expression"
												},
												"deliminator": {
													"value": "@pipeline().parameters.deliminator",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "GenericAzureSQLDatabase",
											"type": "DatasetReference",
											"parameters": {
												"table": {
													"value": "@pipeline().parameters.staggingTable",
													"type": "Expression"
												},
												"secret": {
													"value": "@pipeline().parameters.secret",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"container": {
						"type": "string"
					},
					"directory": {
						"type": "string"
					},
					"file": {
						"type": "string"
					},
					"deliminator": {
						"type": "string"
					},
					"staggingTable": {
						"type": "string"
					},
					"secret": {
						"type": "string"
					},
					"isTruncate": {
						"type": "bool"
					},
					"isZipped": {
						"type": "bool"
					}
				},
				"folder": {
					"name": "Master Template"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/GenericAzureSQLDatabase')]",
				"[concat(variables('factoryId'), '/datasets/ZipFile')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy SQL to SQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Check IsExists Target Table",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "GenericAzureSQLDatabase",
								"type": "DatasetReference",
								"parameters": {
									"table": {
										"value": "@pipeline().parameters.targetTable",
										"type": "Expression"
									},
									"secret": {
										"value": "@pipeline().parameters.targetSecret",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"exists"
							]
						}
					},
					{
						"name": "Switch is source Type and target table exists",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "Check IsExists Target Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@concat(pipeline().parameters.sourceDbType,'-',string(activity('Check IsExists Target Table').output.exists))",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "PaaS-True",
									"activities": [
										{
											"name": "Copy SQL to SQL w Truncate",
											"description": "Truncate before copy",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "AzureSqlSource",
													"queryTimeout": "02:00:00"
												},
												"sink": {
													"type": "AzureSqlSink",
													"preCopyScript": {
														"value": "@{concat('TRUNCATE TABLE ', pipeline().parameters.targetTable)}",
														"type": "Expression"
													},
													"tableOption": "autoCreate",
													"disableMetricsCollection": false
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "GenericAzureSQLDatabase",
													"type": "DatasetReference",
													"parameters": {
														"table": {
															"value": "@pipeline().parameters.sourceTable",
															"type": "Expression"
														},
														"secret": {
															"value": "@pipeline().parameters.sourceSecret",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "GenericAzureSQLDatabase",
													"type": "DatasetReference",
													"parameters": {
														"table": {
															"value": "@pipeline().parameters.targetTable",
															"type": "Expression"
														},
														"secret": {
															"value": "@pipeline().parameters.targetSecret",
															"type": "Expression"
														}
													}
												}
											]
										}
									]
								},
								{
									"value": "Paas-False",
									"activities": [
										{
											"name": "Copy SQL to SQL wo Truncate",
											"description": "Copy without truncate first",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "AzureSqlSource",
													"queryTimeout": "02:00:00"
												},
												"sink": {
													"type": "AzureSqlSink",
													"tableOption": "autoCreate",
													"disableMetricsCollection": false
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "GenericAzureSQLDatabase",
													"type": "DatasetReference",
													"parameters": {
														"table": {
															"value": "@pipeline().parameters.sourceTable",
															"type": "Expression"
														},
														"secret": {
															"value": "@pipeline().parameters.sourceSecret",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "GenericAzureSQLDatabase",
													"type": "DatasetReference",
													"parameters": {
														"table": {
															"value": "@pipeline().parameters.targetTable",
															"type": "Expression"
														},
														"secret": {
															"value": "@pipeline().parameters.targetSecret",
															"type": "Expression"
														}
													}
												}
											]
										}
									]
								},
								{
									"value": "IaaS-True",
									"activities": [
										{
											"name": "Copy SQL IaaS to SQL w Truncate",
											"description": "Truncate before copy",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "SqlServerSource",
													"queryTimeout": "02:00:00"
												},
												"sink": {
													"type": "AzureSqlSink",
													"preCopyScript": {
														"value": "@{concat('TRUNCATE TABLE ', pipeline().parameters.targetTable)}",
														"type": "Expression"
													},
													"tableOption": "autoCreate",
													"disableMetricsCollection": false
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "GenericSqlServer_CCAIDWPRDB004",
													"type": "DatasetReference",
													"parameters": {
														"secret": {
															"value": "@pipeline().parameters.sourceSecret",
															"type": "Expression"
														},
														"table": {
															"value": "@pipeline().parameters.sourceTable",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "GenericAzureSQLDatabase",
													"type": "DatasetReference",
													"parameters": {
														"table": {
															"value": "@pipeline().parameters.targetTable",
															"type": "Expression"
														},
														"secret": {
															"value": "@pipeline().parameters.targetSecret",
															"type": "Expression"
														}
													}
												}
											]
										}
									]
								},
								{
									"value": "IaaS-False",
									"activities": [
										{
											"name": "Copy SQL IaaS to SQL wo Truncate",
											"description": "Truncate before copy",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "SqlServerSource",
													"queryTimeout": "02:00:00"
												},
												"sink": {
													"type": "AzureSqlSink",
													"tableOption": "autoCreate",
													"disableMetricsCollection": false
												},
												"enableStaging": false
											},
											"inputs": [
												{
													"referenceName": "GenericSqlServer_CCAIDWPRDB004",
													"type": "DatasetReference",
													"parameters": {
														"secret": {
															"value": "@pipeline().parameters.sourceSecret",
															"type": "Expression"
														},
														"table": {
															"value": "@pipeline().parameters.sourceTable",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "GenericAzureSQLDatabase",
													"type": "DatasetReference",
													"parameters": {
														"table": {
															"value": "@pipeline().parameters.targetTable",
															"type": "Expression"
														},
														"secret": {
															"value": "@pipeline().parameters.targetSecret",
															"type": "Expression"
														}
													}
												}
											]
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"sourceSecret": {
						"type": "string"
					},
					"sourceTable": {
						"type": "string"
					},
					"sourceDbType": {
						"type": "string",
						"defaultValue": "PaaS"
					},
					"targetSecret": {
						"type": "string"
					},
					"targetTable": {
						"type": "string"
					}
				},
				"variables": {
					"test": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Master Template"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/GenericAzureSQLDatabase')]",
				"[concat(variables('factoryId'), '/datasets/GenericSqlServer_CCAIDWPRDB004')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy Survey Answer Production')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select * from dbo.[SurveyTransaction] A\n\t\twhere StartSurveyDateTime >= '2019-06-01'\n"
							},
							"sink": {
								"type": "AzureSqlSink",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Site",
											"type": "Int32"
										},
										"sink": {
											"name": "Site",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Guid",
											"type": "Guid"
										},
										"sink": {
											"name": "Guid",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "Route",
											"type": "String"
										},
										"sink": {
											"name": "Route",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OutletNumber",
											"type": "String"
										},
										"sink": {
											"name": "OutletNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "WindowsId",
											"type": "String"
										},
										"sink": {
											"name": "WindowsId",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SurveyId",
											"type": "Int32"
										},
										"sink": {
											"name": "SurveyId",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "SurveyDescription",
											"type": "String"
										},
										"sink": {
											"name": "SurveyDescription",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "StartSurveyDateTime",
											"type": "DateTime"
										},
										"sink": {
											"name": "StartSurveyDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "EndSurveyDateTime",
											"type": "DateTime"
										},
										"sink": {
											"name": "EndSurveyDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Comment",
											"type": "String"
										},
										"sink": {
											"name": "Comment",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "SurveyType",
											"type": "String"
										},
										"sink": {
											"name": "SurveyType",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FlagTransaction",
											"type": "String"
										},
										"sink": {
											"name": "FlagTransaction",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TotalScore",
											"type": "Double"
										},
										"sink": {
											"name": "TotalScore",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "CallHistoryGuid",
											"type": "Guid"
										},
										"sink": {
											"name": "CallHistoryGuid",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "ReasonCode",
											"type": "String"
										},
										"sink": {
											"name": "ReasonCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ReasonDescription",
											"type": "String"
										},
										"sink": {
											"name": "ReasonDescription",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "Production_Sales_IaaS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Production_Report_SurveyTransaction",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Production"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Production_Sales_IaaS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy or Move File idcbtap22')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data to target",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "FileServerWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "File_in_idcbtap22",
								"type": "DatasetReference",
								"parameters": {
									"directory": {
										"value": "@pipeline().parameters.sourceDirectory",
										"type": "Expression"
									},
									"filename": {
										"value": "@pipeline().parameters.sourceFilename",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "File_in_idcbtap22",
								"type": "DatasetReference",
								"parameters": {
									"directory": {
										"value": "@pipeline().parameters.targetDirectory",
										"type": "Expression"
									},
									"filename": {
										"value": "@pipeline().parameters.targetFilename",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "If isMove then delete source file",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Copy data to target",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@pipeline().parameters.isMove",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Delete source file",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "File_in_idcbtap22",
											"type": "DatasetReference",
											"parameters": {
												"directory": {
													"value": "@pipeline().parameters.sourceDirectory",
													"type": "Expression"
												},
												"filename": {
													"value": "@pipeline().parameters.sourceFilename",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "FileServerReadSettings",
											"recursive": true
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"sourceDirectory": {
						"type": "string"
					},
					"sourceFilename": {
						"type": "string"
					},
					"targetDirectory": {
						"type": "string"
					},
					"targetFilename": {
						"type": "string"
					},
					"isMove": {
						"type": "bool",
						"defaultValue": true
					}
				},
				"folder": {
					"name": "Master Template"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/File_in_idcbtap22')]"
			]
		}
	]
}