{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ccaidauesadf001"
		},
		"Copy-to-Report-DB_properties_CORE My Equipment_parameters_SyncDataFrom": {
			"type": "string",
			"defaultValue": "-"
		},
		"Copy-to-Report-DB_properties_CORE My Equipment_parameters_SyncDataTo": {
			"type": "string",
			"defaultValue": "-"
		},
		"Copy-to-Report-DB_properties_SAM Users_parameters_SyncDataFrom": {
			"type": "string",
			"defaultValue": "-"
		},
		"Copy-to-Report-DB_properties_SAM Users_parameters_SyncDataTo": {
			"type": "string",
			"defaultValue": "-"
		},
		"Copy-to-Report-DB_properties_MD_BUSalesStructure_parameters_SyncDataFrom": {
			"type": "string",
			"defaultValue": "-"
		},
		"Copy-to-Report-DB_properties_MD_BUSalesStructure_parameters_SyncDataTo": {
			"type": "string",
			"defaultValue": "-"
		},
		"Copy-to-Report-DB_properties_SAM Survey Transaction All_parameters_SyncDataFrom": {
			"type": "string",
			"defaultValue": "-"
		},
		"Copy-to-Report-DB_properties_SAM Survey Transaction All_parameters_SyncDataTo": {
			"type": "string",
			"defaultValue": "-"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/SAM Users')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy from IaaS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "if to Date blank",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "If from Date blank",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[dbo].[spExport_Users]",
								"storedProcedureParameters": {
									"SyncFromDate": {
										"type": "DateTime",
										"value": {
											"value": "@variables('SyncDataFrom')",
											"type": "Expression"
										}
									},
									"SyncToDate": {
										"type": "DateTime",
										"value": {
											"value": "@variables('SyncDataTo')",
											"type": "Expression"
										}
									}
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"sqlWriterStoredProcedureName": "[[dbo].[spSAM_Users_upsert]",
								"sqlWriterTableType": "typeSAM_Users",
								"storedProcedureTableTypeParameterName": "SAM_Users"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "UserId",
											"type": "Guid"
										},
										"sink": {
											"name": "UserId",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "UserName",
											"type": "String"
										},
										"sink": {
											"name": "UserName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FirstName",
											"type": "String"
										},
										"sink": {
											"name": "FirstName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LastName",
											"type": "String"
										},
										"sink": {
											"name": "LastName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PrimaryPhoneNumber",
											"type": "String"
										},
										"sink": {
											"name": "PrimaryPhoneNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SecondaryPhoneNumber",
											"type": "String"
										},
										"sink": {
											"name": "SecondaryPhoneNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PaymentAccess",
											"type": "Boolean"
										},
										"sink": {
											"name": "PaymentAccess",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "EmailOptIn",
											"type": "Boolean"
										},
										"sink": {
											"name": "EmailOptIn",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "CurrentCustomerSite",
											"type": "Int32"
										},
										"sink": {
											"name": "CurrentCustomerSite",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "CurrentCustomerNumber",
											"type": "String"
										},
										"sink": {
											"name": "CurrentCustomerNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BDECustomerSite",
											"type": "Int32"
										},
										"sink": {
											"name": "BDECustomerSite",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "BDECustomerNumber",
											"type": "String"
										},
										"sink": {
											"name": "BDECustomerNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RouteSite",
											"type": "Int32"
										},
										"sink": {
											"name": "RouteSite",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "SapUserName",
											"type": "String"
										},
										"sink": {
											"name": "SapUserName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "ExternalUserId",
											"type": "String"
										},
										"sink": {
											"name": "ExternalUserId",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PinID",
											"type": "String"
										},
										"sink": {
											"name": "PinID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RoleId",
											"type": "Int32"
										},
										"sink": {
											"name": "RoleId",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Application",
											"type": "String"
										},
										"sink": {
											"name": "Application",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "Boolean"
										},
										"sink": {
											"name": "Status",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "LocationCode",
											"type": "String"
										},
										"sink": {
											"name": "LocationCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PersonnelNumber",
											"type": "String"
										},
										"sink": {
											"name": "PersonnelNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SubLoc",
											"type": "String"
										},
										"sink": {
											"name": "SubLoc",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PositionCode",
											"type": "Int32"
										},
										"sink": {
											"name": "PositionCode",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "IsDelete",
											"type": "Boolean"
										},
										"sink": {
											"name": "IsDelete",
											"type": "Boolean"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "Production_Sales_IaaS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Production_Report_SAM_Users",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Update Last Sync Date",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy from IaaS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spImportFromSAM_UpsertLastSyncDate]",
							"storedProcedureParameters": {
								"ErrorMessage": {
									"value": null,
									"type": "String"
								},
								"LastSyncDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTimeOffset"
								},
								"Status": {
									"value": {
										"value": "@activity('Copy from IaaS').output.executionDetails[0].status",
										"type": "Expression"
									},
									"type": "String"
								},
								"SyncDataFrom": {
									"value": {
										"value": "@variables('SyncDataFrom')",
										"type": "Expression"
									},
									"type": "DateTimeOffset"
								},
								"SyncDataTo": {
									"value": {
										"value": "@variables('SyncDataTo')",
										"type": "Expression"
									},
									"type": "DateTimeOffset"
								},
								"TableName": {
									"value": {
										"value": "@variables('TableName')",
										"type": "Expression"
									},
									"type": "String"
								},
								"TotalRecords": {
									"value": {
										"value": "@activity('Copy from IaaS').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "IR2_REPORT_PRODUCTION",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Update Error Message",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy from IaaS",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spImportFromSAM_UpsertLastSyncDate]",
							"storedProcedureParameters": {
								"ErrorMessage": {
									"value": {
										"value": "@activity('Copy from IaaS').error.message",
										"type": "Expression"
									},
									"type": "String"
								},
								"LastSyncDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTimeOffset"
								},
								"Status": {
									"value": "Error",
									"type": "String"
								},
								"SyncDataFrom": {
									"value": {
										"value": "@variables('SyncDataFrom')",
										"type": "Expression"
									},
									"type": "DateTimeOffset"
								},
								"SyncDataTo": {
									"value": {
										"value": "@variables('SyncDataTo')",
										"type": "Expression"
									},
									"type": "DateTimeOffset"
								},
								"TableName": {
									"value": {
										"value": "@variables('TableName')",
										"type": "Expression"
									},
									"type": "String"
								},
								"TotalRecords": {
									"value": null,
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "IR2_REPORT_PRODUCTION",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup Sync Date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[spImportFromSAM_GetLastSyncDate]",
								"storedProcedureParameters": {
									"TableName": {
										"type": "String",
										"value": {
											"value": "@variables('TableName')",
											"type": "Expression"
										}
									}
								}
							},
							"dataset": {
								"referenceName": "Production_Report_SAM_Customer",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If from Date blank",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Lookup Sync Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(pipeline().parameters.SyncDataFrom, '-')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "SyncDataFrom from parameter",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "SyncDataFrom",
										"value": {
											"value": "@pipeline().parameters.SyncDataFrom",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "SyncFromData from Table",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "SyncDataFrom",
										"value": {
											"value": "@activity('Lookup Sync Date').output.firstrow.SyncDataTo",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "if to Date blank",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Lookup Sync Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(pipeline().parameters.SyncDataTo, '-')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "SyncDataTo from Parameter",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "SyncDataTo",
										"value": {
											"value": "@pipeline().parameters.SyncDataTo",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "SyncDataTo from now function",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "SyncDataTo",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"SyncDataFrom": {
						"type": "string",
						"defaultValue": "-"
					},
					"SyncDataTo": {
						"type": "string",
						"defaultValue": "-"
					}
				},
				"variables": {
					"TableName": {
						"type": "String",
						"defaultValue": "SAM_Users"
					},
					"SyncDataFrom": {
						"type": "String"
					},
					"SyncDataTo": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Production/Export To Reporting/from SAM"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy-QAQuestion-from-QA-to-DEV')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy QAQuestion from QA to DEV",
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Copy QAQuestions",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2019-07-10T07:57:00Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								3
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Delete Old Data in CCASitecore_Custom')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "DeleteOldLogSyncs_CCASitecore_Custom",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "Delete CallHistory By PinId",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2019-07-31T08:57:00.000Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0,
								15,
								30,
								45
							],
							"hours": [
								18,
								19,
								20,
								21
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Integration_SalesOffice')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Integrate_SalesOffice",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "Integrate_SalesOffice_Q",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "Interface Customer Additionals Dev",
							"type": "PipelineReference"
						},
						"parameters": {}
					},
					{
						"pipelineReference": {
							"referenceName": "Interface Customer Additionals QA",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2019-08-07T21:00:00.000Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								21
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SendToBI')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "SendToBI",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 1,
						"startTime": "2019-07-22T11:25:00.000Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Export SAM to Report')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute SAM Users",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SAM Users",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"SyncDataFrom": {
									"value": "@pipeline().parameters.SyncFromDate",
									"type": "Expression"
								},
								"SyncDataTo": {
									"value": "@pipeline().parameters.SyncToDate",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Execute SAM Call History",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute SAM Users",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SAM Call History",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"SyncDataFrom": {
									"value": "@pipeline().parameters.SyncFromDate",
									"type": "Expression"
								},
								"SyncDataTo": {
									"value": "@pipeline().parameters.SyncToDate",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Execute SAM Call History Detail",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute SAM Call History",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SAM Call History Detail",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"SyncDataFrom": {
									"value": "@pipeline().parameters.SyncFromDate",
									"type": "Expression"
								},
								"SyncDataTo": {
									"value": "@pipeline().parameters.SyncToDate",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Execute SAM Survey Transaction",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute SAM Users",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SAM Survey Transaction",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"SyncDataFrom": {
									"value": "@pipeline().parameters.SyncFromDate",
									"type": "Expression"
								},
								"SyncDataTo": {
									"value": "@pipeline().parameters.SyncToDate",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Execute SAM Survey Answer",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute SAM Survey Transaction",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SAM Survey Transaction Answer",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"SyncDataFrom": {
									"value": "@pipeline().parameters.SyncFromDate",
									"type": "Expression"
								},
								"SyncDataTo": {
									"value": "@pipeline().parameters.SyncToDate",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Execute CORE My Equipment",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CORE My Equipment",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"SyncDataFrom": {
									"value": "@pipeline().parameters.SyncFromDate",
									"type": "Expression"
								},
								"SyncDataTo": {
									"value": "@pipeline().parameters.SyncToDate",
									"type": "Expression"
								}
							}
						}
					}
				],
				"parameters": {
					"SyncFromDate": {
						"type": "string",
						"defaultValue": "2019-08-01"
					},
					"SyncToDate": {
						"type": "string",
						"defaultValue": "2019-08-28"
					}
				},
				"folder": {
					"name": "Production/Export To Reporting"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/SAM Users')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy-ATB-from-IaaS-to-PaaS')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Copy ATB",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Month",
						"interval": 1,
						"startTime": "2019-07-16T11:02:00Z",
						"timeZone": "UTC",
						"schedule": {
							"monthDays": [
								1
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy-to-Report-DB')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy to Report Database",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "CORE My Equipment",
							"type": "PipelineReference"
						},
						"parameters": {
							"SyncDataFrom": "[parameters('Copy-to-Report-DB_properties_CORE My Equipment_parameters_SyncDataFrom')]",
							"SyncDataTo": "[parameters('Copy-to-Report-DB_properties_CORE My Equipment_parameters_SyncDataTo')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SAM Users",
							"type": "PipelineReference"
						},
						"parameters": {
							"SyncDataFrom": "[parameters('Copy-to-Report-DB_properties_SAM Users_parameters_SyncDataFrom')]",
							"SyncDataTo": "[parameters('Copy-to-Report-DB_properties_SAM Users_parameters_SyncDataTo')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "MD_BUSalesStructure",
							"type": "PipelineReference"
						},
						"parameters": {
							"SyncDataFrom": "[parameters('Copy-to-Report-DB_properties_MD_BUSalesStructure_parameters_SyncDataFrom')]",
							"SyncDataTo": "[parameters('Copy-to-Report-DB_properties_MD_BUSalesStructure_parameters_SyncDataTo')]"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "SAM Survey Transaction All",
							"type": "PipelineReference"
						},
						"parameters": {
							"SyncDataFrom": "[parameters('Copy-to-Report-DB_properties_SAM Survey Transaction All_parameters_SyncDataFrom')]",
							"SyncDataTo": "[parameters('Copy-to-Report-DB_properties_SAM Survey Transaction All_parameters_SyncDataTo')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2019-08-21T09:10:00.000Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								18
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/SAM Users')]"
			]
		}
	]
}