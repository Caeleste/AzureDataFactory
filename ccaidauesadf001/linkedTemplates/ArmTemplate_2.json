{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ccaidauesadf001"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CORE My Equipment')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy from IaaS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "if to Date blank",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "If from Date blank",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[spExport_MyEquipment]",
								"storedProcedureParameters": {
									"SyncFromDate": {
										"type": "DateTime",
										"value": {
											"value": "@variables('SyncDataFrom')",
											"type": "Expression"
										}
									},
									"SyncToDate": {
										"type": "DateTime",
										"value": {
											"value": "@variables('SyncDataTo')",
											"type": "Expression"
										}
									}
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"sqlWriterStoredProcedureName": "[[dbo].[spCORE_MyEquipment_upsert]",
								"sqlWriterTableType": "typeCORE_MyEquipment",
								"storedProcedureTableTypeParameterName": "CORE_MyEquipment"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Id",
											"type": "Guid"
										},
										"sink": {
											"name": "Id",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "SurveyTransactionId",
											"type": "Guid"
										},
										"sink": {
											"name": "SurveyTransactionId",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "RequestNumber",
											"type": "String"
										},
										"sink": {
											"name": "RequestNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RequestType",
											"type": "String"
										},
										"sink": {
											"name": "RequestType",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RequestReason",
											"type": "String"
										},
										"sink": {
											"name": "RequestReason",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OutletNumber",
											"type": "Int32"
										},
										"sink": {
											"name": "OutletNumber",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "OutletLocation",
											"type": "String"
										},
										"sink": {
											"name": "OutletLocation",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Route",
											"type": "String"
										},
										"sink": {
											"name": "Route",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Market",
											"type": "String"
										},
										"sink": {
											"name": "Market",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Segment",
											"type": "String"
										},
										"sink": {
											"name": "Segment",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OutletClass",
											"type": "String"
										},
										"sink": {
											"name": "OutletClass",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TopBronze",
											"type": "Boolean"
										},
										"sink": {
											"name": "TopBronze",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "TradingChain",
											"type": "String"
										},
										"sink": {
											"name": "TradingChain",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "GMArea",
											"type": "String"
										},
										"sink": {
											"name": "GMArea",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "NumberOfGDM",
											"type": "Byte"
										},
										"sink": {
											"name": "NumberOfGDM",
											"type": "Byte"
										}
									},
									{
										"source": {
											"name": "PICName",
											"type": "String"
										},
										"sink": {
											"name": "PICName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PICPhoneNumber",
											"type": "String"
										},
										"sink": {
											"name": "PICPhoneNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IsStrategicOutlet",
											"type": "String"
										},
										"sink": {
											"name": "IsStrategicOutlet",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "StartDateTime",
											"type": "DateTimeOffset"
										},
										"sink": {
											"name": "StartDateTime",
											"type": "DateTimeOffset"
										}
									},
									{
										"source": {
											"name": "EndDateTime",
											"type": "DateTimeOffset"
										},
										"sink": {
											"name": "EndDateTime",
											"type": "DateTimeOffset"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTimeOffset"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTimeOffset"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTimeOffset"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTimeOffset"
										}
									},
									{
										"source": {
											"name": "PINID",
											"type": "Int32"
										},
										"sink": {
											"name": "PINID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "RequestorPhoneNumber",
											"type": "String"
										},
										"sink": {
											"name": "RequestorPhoneNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EquipmentNumber",
											"type": "String"
										},
										"sink": {
											"name": "EquipmentNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EquipmentTypePlacement",
											"type": "String"
										},
										"sink": {
											"name": "EquipmentTypePlacement",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EquipmentTypeRemoval",
											"type": "String"
										},
										"sink": {
											"name": "EquipmentTypeRemoval",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EquipmentDetailPosition",
											"type": "String"
										},
										"sink": {
											"name": "EquipmentDetailPosition",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PowerSource",
											"type": "String"
										},
										"sink": {
											"name": "PowerSource",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DistanceEquipmentPower",
											"type": "String"
										},
										"sink": {
											"name": "DistanceEquipmentPower",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OutletOpenHour",
											"type": "String"
										},
										"sink": {
											"name": "OutletOpenHour",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OutletClosedHour",
											"type": "String"
										},
										"sink": {
											"name": "OutletClosedHour",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EquipmentReceiveHour",
											"type": "String"
										},
										"sink": {
											"name": "EquipmentReceiveHour",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IsOutletAddressDiff",
											"type": "Boolean"
										},
										"sink": {
											"name": "IsOutletAddressDiff",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "ReasonDiffOutletAddress",
											"type": "String"
										},
										"sink": {
											"name": "ReasonDiffOutletAddress",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CorrectOutletAddress",
											"type": "String"
										},
										"sink": {
											"name": "CorrectOutletAddress",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OutletPhoto",
											"type": "String"
										},
										"sink": {
											"name": "OutletPhoto",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ProposalFormPhoto",
											"type": "String"
										},
										"sink": {
											"name": "ProposalFormPhoto",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PICPhoto",
											"type": "String"
										},
										"sink": {
											"name": "PICPhoto",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PICAutograph",
											"type": "String"
										},
										"sink": {
											"name": "PICAutograph",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CaseNumber",
											"type": "String"
										},
										"sink": {
											"name": "CaseNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CaseStatus",
											"type": "String"
										},
										"sink": {
											"name": "CaseStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CaseStatusReason",
											"type": "String"
										},
										"sink": {
											"name": "CaseStatusReason",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "WONumberInstallation",
											"type": "String"
										},
										"sink": {
											"name": "WONumberInstallation",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "WOStatusInstallation",
											"type": "String"
										},
										"sink": {
											"name": "WOStatusInstallation",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "WONumberRemoval",
											"type": "String"
										},
										"sink": {
											"name": "WONumberRemoval",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "WOStatusRemoval",
											"type": "String"
										},
										"sink": {
											"name": "WOStatusRemoval",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MaterialNumber",
											"type": "String"
										},
										"sink": {
											"name": "MaterialNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IsBundling",
											"type": "Boolean"
										},
										"sink": {
											"name": "IsBundling",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "DeliveryPlan",
											"type": "String"
										},
										"sink": {
											"name": "DeliveryPlan",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SellingCommitment",
											"type": "String"
										},
										"sink": {
											"name": "SellingCommitment",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PromisedDeliveryDate",
											"type": "DateTimeOffset"
										},
										"sink": {
											"name": "PromisedDeliveryDate",
											"type": "DateTimeOffset"
										}
									},
									{
										"source": {
											"name": "EqTypOthers",
											"type": "String"
										},
										"sink": {
											"name": "EqTypOthers",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TakeOutletLoc",
											"type": "String"
										},
										"sink": {
											"name": "TakeOutletLoc",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IsSubmittedToSFDC",
											"type": "Int32"
										},
										"sink": {
											"name": "IsSubmittedToSFDC",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "IsSubmittedToServiceNow",
											"type": "Int32"
										},
										"sink": {
											"name": "IsSubmittedToServiceNow",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "CategoryReported",
											"type": "String"
										},
										"sink": {
											"name": "CategoryReported",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "HoldReason",
											"type": "String"
										},
										"sink": {
											"name": "HoldReason",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CDEBundlingCallResult",
											"type": "String"
										},
										"sink": {
											"name": "CDEBundlingCallResult",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "WOTypeDescription",
											"type": "String"
										},
										"sink": {
											"name": "WOTypeDescription",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SFDCRequest",
											"type": "String"
										},
										"sink": {
											"name": "SFDCRequest",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SFDCResponse",
											"type": "String"
										},
										"sink": {
											"name": "SFDCResponse",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ServiceNowRequest",
											"type": "String"
										},
										"sink": {
											"name": "ServiceNowRequest",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ServiceNowResponse",
											"type": "String"
										},
										"sink": {
											"name": "ServiceNowResponse",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RequestId",
											"type": "String"
										},
										"sink": {
											"name": "RequestId",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DSM",
											"type": "String"
										},
										"sink": {
											"name": "DSM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SM",
											"type": "String"
										},
										"sink": {
											"name": "SM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SR",
											"type": "String"
										},
										"sink": {
											"name": "SR",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "Production_Core",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Production_Report_SAM_Users",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Update Last Sync Date",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy from IaaS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spImportFromSAM_UpsertLastSyncDate]",
							"storedProcedureParameters": {
								"ErrorMessage": {
									"value": null,
									"type": "String"
								},
								"LastSyncDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTimeOffset"
								},
								"Status": {
									"value": {
										"value": "@activity('Copy from IaaS').output.executionDetails[0].status",
										"type": "Expression"
									},
									"type": "String"
								},
								"SyncDataFrom": {
									"value": {
										"value": "@variables('SyncDataFrom')",
										"type": "Expression"
									},
									"type": "DateTimeOffset"
								},
								"SyncDataTo": {
									"value": {
										"value": "@variables('SyncDataTo')",
										"type": "Expression"
									},
									"type": "DateTimeOffset"
								},
								"TableName": {
									"value": {
										"value": "@variables('TableName')",
										"type": "Expression"
									},
									"type": "String"
								},
								"TotalRecords": {
									"value": {
										"value": "@activity('Copy from IaaS').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "IR2_REPORT_PRODUCTION",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Update Error Message",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy from IaaS",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spImportFromSAM_UpsertLastSyncDate]",
							"storedProcedureParameters": {
								"ErrorMessage": {
									"value": {
										"value": "@activity('Copy from IaaS').error.message",
										"type": "Expression"
									},
									"type": "String"
								},
								"LastSyncDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTimeOffset"
								},
								"Status": {
									"value": "Error",
									"type": "String"
								},
								"SyncDataFrom": {
									"value": {
										"value": "@variables('SyncDataFrom')",
										"type": "Expression"
									},
									"type": "DateTimeOffset"
								},
								"SyncDataTo": {
									"value": {
										"value": "@variables('SyncDataTo')",
										"type": "Expression"
									},
									"type": "DateTimeOffset"
								},
								"TableName": {
									"value": {
										"value": "@variables('TableName')",
										"type": "Expression"
									},
									"type": "String"
								},
								"TotalRecords": {
									"value": null,
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "IR2_REPORT_PRODUCTION",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup Sync Date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[spImportFromSAM_GetLastSyncDate]",
								"storedProcedureParameters": {
									"TableName": {
										"type": "String",
										"value": {
											"value": "@variables('TableName')",
											"type": "Expression"
										}
									}
								}
							},
							"dataset": {
								"referenceName": "Production_Report_SAM_Customer",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If from Date blank",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Lookup Sync Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(pipeline().parameters.SyncDataFrom, '-')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "SyncDataFrom from parameter",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "SyncDataFrom",
										"value": {
											"value": "@pipeline().parameters.SyncDataFrom",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "SyncFromData from Table",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "SyncDataFrom",
										"value": {
											"value": "@activity('Lookup Sync Date').output.firstrow.SyncDataTo",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "if to Date blank",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Lookup Sync Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(pipeline().parameters.SyncDataTo, '-')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "SyncDataTo from Parameter",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "SyncDataTo",
										"value": {
											"value": "@pipeline().parameters.SyncDataTo",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "SyncDataTo from now function",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "SyncDataTo",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"SyncDataFrom": {
						"type": "string",
						"defaultValue": "-"
					},
					"SyncDataTo": {
						"type": "string",
						"defaultValue": "-"
					}
				},
				"variables": {
					"TableName": {
						"type": "String",
						"defaultValue": "CORE_MyEquipment"
					},
					"SyncDataFrom": {
						"type": "String"
					},
					"SyncDataTo": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Production/Export To Reporting/from CORE"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy Briefcase To Database')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy Briefcase from production to database",
				"activities": [
					{
						"name": "Copy Briefcase Header",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Select * From Briefcase_Header"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "briefcase_id",
											"type": "Int64"
										},
										"sink": {
											"name": "briefcase_id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "title",
											"type": "String"
										},
										"sink": {
											"name": "title",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SelectType",
											"type": "String"
										},
										"sink": {
											"name": "SelectType",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "start_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "start_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "end_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "end_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "status",
											"type": "String"
										},
										"sink": {
											"name": "status",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "created_by",
											"type": "String"
										},
										"sink": {
											"name": "created_by",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "file_name",
											"type": "String"
										},
										"sink": {
											"name": "file_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "UpdateTime",
											"type": "DateTime"
										},
										"sink": {
											"name": "UpdateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "UpdateUser",
											"type": "String"
										},
										"sink": {
											"name": "UpdateUser",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BriefcaseType",
											"type": "String"
										},
										"sink": {
											"name": "BriefcaseType",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "Production_Core",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Dev_Core_Briefcase",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy Briefcase Detail",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy Briefcase Header",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Select * From Briefcase_detail"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "briefcase_id",
											"type": "Int64"
										},
										"sink": {
											"name": "briefcase_id",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "outlet_number",
											"type": "String"
										},
										"sink": {
											"name": "outlet_number",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "UpdateTime",
											"type": "DateTime"
										},
										"sink": {
											"name": "UpdateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "level",
											"type": "String"
										},
										"sink": {
											"name": "level",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "user_code",
											"type": "String"
										},
										"sink": {
											"name": "user_code",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "Production_Core",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Dev_Core_Briefcase_detail",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Production"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy QAQuestions')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy QAQuestions from QA to Dev",
				"activities": [
					{
						"name": "Copy Data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate QAQuestion Dev",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Site",
											"type": "String"
										},
										"sink": {
											"name": "Site",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EquipmentNumber",
											"type": "String"
										},
										"sink": {
											"name": "EquipmentNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SectionID",
											"type": "String"
										},
										"sink": {
											"name": "SectionID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MeasuringPoint",
											"type": "String"
										},
										"sink": {
											"name": "MeasuringPoint",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "QuestionText",
											"type": "String"
										},
										"sink": {
											"name": "QuestionText",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ProductID",
											"type": "String"
										},
										"sink": {
											"name": "ProductID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Sequence",
											"type": "Int32"
										},
										"sink": {
											"name": "Sequence",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "AnswerGroup",
											"type": "String"
										},
										"sink": {
											"name": "AnswerGroup",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "UnitOfMeasure",
											"type": "String"
										},
										"sink": {
											"name": "UnitOfMeasure",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MaxValue",
											"type": "String"
										},
										"sink": {
											"name": "MaxValue",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MinValue",
											"type": "String"
										},
										"sink": {
											"name": "MinValue",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DataType",
											"type": "String"
										},
										"sink": {
											"name": "DataType",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "QuestCode",
											"type": "String"
										},
										"sink": {
											"name": "QuestCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IsActive",
											"type": "Boolean"
										},
										"sink": {
											"name": "IsActive",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTimeOffset"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTimeOffset"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTimeOffset"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTimeOffset"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "QA_CDE_QAQuestion",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DEV_CDE_QAQuestion",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Truncate QAQuestion Dev",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DataFactory_TruncateQAQuestions]"
						},
						"linkedServiceName": {
							"referenceName": "IR2_CDE_DEV",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Development"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Delete CallHistory By PinId')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Stored Procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_DeleteOldCallHistoryByPinId]",
							"storedProcedureParameters": {
								"PinId": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "IaaS_SALES_PRODUCTION",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Production"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteOldLogSyncs_CCASitecore_Custom')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Stored Procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_DeleteOldLogSyncs]"
						},
						"linkedServiceName": {
							"referenceName": "IaaS_SALES_PRODUCTION",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Production"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Interface Customer Additionals Dev')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy From Core to Master Data",
						"description": "Copy CustomerAdditionals",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Select\n\tS.CustomerNumber, S.DistributionCenterFlag, S.WholeSalerPlatinum, S.MITPaket, S.PromoPaket, S.NPDPaket, S.DMSReserve1\nFrom\n[CustomerAdditionals] S"
							},
							"sink": {
								"type": "AzureSqlSink",
								"sqlWriterStoredProcedureName": "[[dbo].[sp_CustomerAdditional_upsert]",
								"sqlWriterTableType": "typeCustomerAdditional",
								"storedProcedureTableTypeParameterName": "source"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CustomerNumber",
											"type": "String"
										},
										"sink": {
											"name": "CustomerNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DistributionCenterFlag",
											"type": "String"
										},
										"sink": {
											"name": "DistributionCenterFlag",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "WholeSalerPlatinum",
											"type": "String"
										},
										"sink": {
											"name": "WholeSalerPlatinum",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MITPaket",
											"type": "String"
										},
										"sink": {
											"name": "MITPaket",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PromoPaket",
											"type": "String"
										},
										"sink": {
											"name": "PromoPaket",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "NPDPaket",
											"type": "String"
										},
										"sink": {
											"name": "NPDPaket",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DMSReserve1",
											"type": "String"
										},
										"sink": {
											"name": "DMSReserve1",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "Dev_Core",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Dev_MasterData_CustomerAdditionals",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Development"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Interface Customer Additionals QA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy From Core to Master Data",
						"description": "Copy CustomerAdditionals",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Select\n\tS.CustomerNumber, S.DistributionCenterFlag, S.WholeSalerPlatinum, S.MITPaket, S.PromoPaket, S.NPDPaket, S.DMSReserve1\nFrom\n[CustomerAdditionals] S"
							},
							"sink": {
								"type": "AzureSqlSink",
								"sqlWriterStoredProcedureName": "[[dbo].[sp_CustomerAdditional_upsert]",
								"sqlWriterTableType": "typeCustomerAdditional",
								"storedProcedureTableTypeParameterName": "source"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CustomerNumber",
											"type": "String"
										},
										"sink": {
											"name": "CustomerNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DistributionCenterFlag",
											"type": "String"
										},
										"sink": {
											"name": "DistributionCenterFlag",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "WholeSalerPlatinum",
											"type": "String"
										},
										"sink": {
											"name": "WholeSalerPlatinum",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MITPaket",
											"type": "String"
										},
										"sink": {
											"name": "MITPaket",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PromoPaket",
											"type": "String"
										},
										"sink": {
											"name": "PromoPaket",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "NPDPaket",
											"type": "String"
										},
										"sink": {
											"name": "NPDPaket",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DMSReserve1",
											"type": "String"
										},
										"sink": {
											"name": "DMSReserve1",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "QA_CORE_ROLE",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "QA_MasterData_CustomerAdditionals",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "QA"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SendToBI')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Send To BI",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT \n'ND' as UPDATE_STATUS,\nSubstring(Mainkey, 1, 6) as MAINKEY,\nSubstring(Subkey, 1, 7) as SUBKEY,\nSubstring([Data], 1, 80) as DATAFIELD\nFrom [Configuration]\nwhere [Mainkey] = 'SendToBI'\nAnd substring ([param], 1, 1) = '1'\nAnd [Application]='BACKEND'"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table CoreConfigurationToBI"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "UPDATE_STATUS",
											"type": "String"
										},
										"sink": {
											"name": "UPDATE_STATUS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MAINKEY",
											"type": "String"
										},
										"sink": {
											"name": "MAINKEY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SUBKEY",
											"type": "String"
										},
										"sink": {
											"name": "SUBKEY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DATAFIELD",
											"type": "String"
										},
										"sink": {
											"name": "DATAFIELD",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DEV_CORE_Configuration",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DEV_CORE_CoreConfigurationToBI",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Development"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "IDCBTIN22_Root",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": "SendUserGps_20191008.zip",
						"folderPath": "ToBasis"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DEV_IaaS_ATB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "IaaS_SALES",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Development"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "Site",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Period",
						"type": "nvarchar"
					},
					{
						"name": "CustomerNumber",
						"type": "nvarchar"
					},
					{
						"name": "CreditLimit",
						"type": "decimal",
						"precision": 13,
						"scale": 0
					},
					{
						"name": "OpeningBalance",
						"type": "decimal",
						"precision": 13,
						"scale": 0
					},
					{
						"name": "TotalOverdueAmount",
						"type": "decimal",
						"precision": 13,
						"scale": 0
					},
					{
						"name": "OverdueAmount1to30Days",
						"type": "decimal",
						"precision": 13,
						"scale": 0
					},
					{
						"name": "OverdueAmount31to60Days",
						"type": "decimal",
						"precision": 13,
						"scale": 0
					},
					{
						"name": "OverdueAmountOver60Days",
						"type": "decimal",
						"precision": 13,
						"scale": 0
					},
					{
						"name": "ARCreditOutstanding",
						"type": "decimal",
						"precision": 13,
						"scale": 0
					},
					{
						"name": "ARTemporaryCreditOutstanding",
						"type": "decimal",
						"precision": 13,
						"scale": 0
					},
					{
						"name": "ARCashOutstanding",
						"type": "decimal",
						"precision": 13,
						"scale": 0
					},
					{
						"name": "ARInvoiceCreditDay",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ShipToNumber",
						"type": "nvarchar"
					},
					{
						"name": "CreditSequence",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CreditType",
						"type": "nvarchar"
					},
					{
						"name": "InvoiceNumber",
						"type": "nvarchar"
					},
					{
						"name": "InvoiceStatus",
						"type": "nvarchar"
					},
					{
						"name": "InvoiceAmount",
						"type": "decimal",
						"precision": 13,
						"scale": 0
					},
					{
						"name": "LPCAmount",
						"type": "decimal",
						"precision": 13,
						"scale": 0
					},
					{
						"name": "SettlementLocation",
						"type": "nvarchar"
					},
					{
						"name": "ARLocation",
						"type": "nvarchar"
					},
					{
						"name": "ARCollectorRoute",
						"type": "nvarchar"
					},
					{
						"name": "InvoiceDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ReceiptDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "SubmissionDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DueDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CalculatedDueDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "LastPaymentDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ReferenceNumber",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PastDueFlag",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AgeDelivery",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AgeSubmission",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DaysToReceive",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DaysToSubmit",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DaysInAR",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Current",
						"type": "decimal",
						"precision": 13,
						"scale": 0
					},
					{
						"name": "Overdue1to7Days",
						"type": "decimal",
						"precision": 13,
						"scale": 0
					},
					{
						"name": "Overdue8to14Days",
						"type": "decimal",
						"precision": 13,
						"scale": 0
					},
					{
						"name": "Overdue15to21Days",
						"type": "decimal",
						"precision": 13,
						"scale": 0
					},
					{
						"name": "Overdue22to30Days",
						"type": "decimal",
						"precision": 13,
						"scale": 0
					},
					{
						"name": "Overdue31to60Days",
						"type": "decimal",
						"precision": 13,
						"scale": 0
					},
					{
						"name": "Overdue61to90Days",
						"type": "decimal",
						"precision": 13,
						"scale": 0
					},
					{
						"name": "Overdue91to120Days",
						"type": "decimal",
						"precision": 13,
						"scale": 0
					},
					{
						"name": "OverdueOver120Days",
						"type": "decimal",
						"precision": 13,
						"scale": 0
					},
					{
						"name": "Unapplied",
						"type": "decimal",
						"precision": 13,
						"scale": 0
					},
					{
						"name": "Overpayment",
						"type": "decimal",
						"precision": 13,
						"scale": 0
					},
					{
						"name": "ProprietaryBadDebt",
						"type": "decimal",
						"precision": 13,
						"scale": 0
					},
					{
						"name": "DCM",
						"type": "nvarchar"
					},
					{
						"name": "GM",
						"type": "nvarchar"
					},
					{
						"name": "SM",
						"type": "nvarchar"
					},
					{
						"name": "MarketingLocation",
						"type": "nvarchar"
					},
					{
						"name": "ARResponsibilityCode",
						"type": "nvarchar"
					},
					{
						"name": "PKPFlag",
						"type": "nvarchar"
					},
					{
						"name": "DocumentNumber",
						"type": "nvarchar"
					},
					{
						"name": "CustomerOrderNumber",
						"type": "nvarchar"
					},
					{
						"name": "DeliveryTransactionCode",
						"type": "nvarchar"
					},
					{
						"name": "TaxInvoiceNumber",
						"type": "nvarchar"
					},
					{
						"name": "TaxInvoiceName",
						"type": "nvarchar"
					},
					{
						"name": "NPWP",
						"type": "nvarchar"
					},
					{
						"name": "OutletCreditDay",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ReceiptNumber",
						"type": "nvarchar"
					},
					{
						"name": "CallingDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "IsDelete",
						"type": "bit"
					}
				],
				"typeProperties": {
					"tableName": "[[dbo].[AccountTrialBalance]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Production_MasterData_IaaS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "IaaS_MASTERDATA_PRODUCTION",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Production_Sales_IaaS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "IaaS_SALES_PRODUCTION",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Production"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SendUserGps')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "IDCBTIN22_Root",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": "SendUserGps_20191008.zip",
						"folderPath": "ToBasis"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SendUserGpsCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "IDCBTIN22_Root",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": "SendUserGps_20191008.zip",
						"folderPath": "ToBasis"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UpdateInvalidStatus_DataSubmitStaging')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "UpdateInvalidStatus_DataSubmitStaging",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 5,
						"startTime": "2019-08-23T07:56:00.000Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy ATB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy ATB",
						"description": "Copy ATB from PaaS to IaaS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Get Metadata1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Site",
											"type": "Int32"
										},
										"sink": {
											"name": "Site",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Period",
											"type": "String"
										},
										"sink": {
											"name": "Period",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CustomerNumber",
											"type": "String"
										},
										"sink": {
											"name": "CustomerNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CreditLimit",
											"type": "Decimal"
										},
										"sink": {
											"name": "CreditLimit",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "OpeningBalance",
											"type": "Decimal"
										},
										"sink": {
											"name": "OpeningBalance",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "TotalOverdueAmount",
											"type": "Decimal"
										},
										"sink": {
											"name": "TotalOverdueAmount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "OverdueAmount1to30Days",
											"type": "Decimal"
										},
										"sink": {
											"name": "OverdueAmount1to30Days",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "OverdueAmount31to60Days",
											"type": "Decimal"
										},
										"sink": {
											"name": "OverdueAmount31to60Days",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "OverdueAmountOver60Days",
											"type": "Decimal"
										},
										"sink": {
											"name": "OverdueAmountOver60Days",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "ARCreditOutstanding",
											"type": "Decimal"
										},
										"sink": {
											"name": "ARCreditOutstanding",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "ARTemporaryCreditOutstanding",
											"type": "Decimal"
										},
										"sink": {
											"name": "ARTemporaryCreditOutstanding",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "ARCashOutstanding",
											"type": "Decimal"
										},
										"sink": {
											"name": "ARCashOutstanding",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "ARInvoiceCreditDay",
											"type": "Int32"
										},
										"sink": {
											"name": "ARInvoiceCreditDay",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ShipToNumber",
											"type": "String"
										},
										"sink": {
											"name": "ShipToNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CreditSequence",
											"type": "Int32"
										},
										"sink": {
											"name": "CreditSequence",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "CreditType",
											"type": "String"
										},
										"sink": {
											"name": "CreditType",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "InvoiceNumber",
											"type": "String"
										},
										"sink": {
											"name": "InvoiceNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "InvoiceStatus",
											"type": "String"
										},
										"sink": {
											"name": "InvoiceStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "InvoiceAmount",
											"type": "Decimal"
										},
										"sink": {
											"name": "InvoiceAmount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "LPCAmount",
											"type": "Decimal"
										},
										"sink": {
											"name": "LPCAmount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "SettlementLocation",
											"type": "String"
										},
										"sink": {
											"name": "SettlementLocation",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ARLocation",
											"type": "String"
										},
										"sink": {
											"name": "ARLocation",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ARCollectorRoute",
											"type": "String"
										},
										"sink": {
											"name": "ARCollectorRoute",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "InvoiceDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "InvoiceDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "ReceiptDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "ReceiptDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "SubmissionDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "SubmissionDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "DueDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "DueDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "CalculatedDueDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "CalculatedDueDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "LastPaymentDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastPaymentDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "ReferenceNumber",
											"type": "Int32"
										},
										"sink": {
											"name": "ReferenceNumber",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "PastDueFlag",
											"type": "Int32"
										},
										"sink": {
											"name": "PastDueFlag",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "AgeDelivery",
											"type": "Int32"
										},
										"sink": {
											"name": "AgeDelivery",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "AgeSubmission",
											"type": "Int32"
										},
										"sink": {
											"name": "AgeSubmission",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DaysToReceive",
											"type": "Int32"
										},
										"sink": {
											"name": "DaysToReceive",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DaysToSubmit",
											"type": "Int32"
										},
										"sink": {
											"name": "DaysToSubmit",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DaysInAR",
											"type": "Int32"
										},
										"sink": {
											"name": "DaysInAR",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Current",
											"type": "Decimal"
										},
										"sink": {
											"name": "Current",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Overdue1to7Days",
											"type": "Decimal"
										},
										"sink": {
											"name": "Overdue1to7Days",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Overdue8to14Days",
											"type": "Decimal"
										},
										"sink": {
											"name": "Overdue8to14Days",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Overdue15to21Days",
											"type": "Decimal"
										},
										"sink": {
											"name": "Overdue15to21Days",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Overdue22to30Days",
											"type": "Decimal"
										},
										"sink": {
											"name": "Overdue22to30Days",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Overdue31to60Days",
											"type": "Decimal"
										},
										"sink": {
											"name": "Overdue31to60Days",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Overdue61to90Days",
											"type": "Decimal"
										},
										"sink": {
											"name": "Overdue61to90Days",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Overdue91to120Days",
											"type": "Decimal"
										},
										"sink": {
											"name": "Overdue91to120Days",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "OverdueOver120Days",
											"type": "Decimal"
										},
										"sink": {
											"name": "OverdueOver120Days",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Unapplied",
											"type": "Decimal"
										},
										"sink": {
											"name": "Unapplied",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Overpayment",
											"type": "Decimal"
										},
										"sink": {
											"name": "Overpayment",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "ProprietaryBadDebt",
											"type": "Decimal"
										},
										"sink": {
											"name": "ProprietaryBadDebt",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "DCM",
											"type": "String"
										},
										"sink": {
											"name": "DCM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "GM",
											"type": "String"
										},
										"sink": {
											"name": "GM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SM",
											"type": "String"
										},
										"sink": {
											"name": "SM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "MarketingLocation",
											"type": "String"
										},
										"sink": {
											"name": "MarketingLocation",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ARResponsibilityCode",
											"type": "String"
										},
										"sink": {
											"name": "ARResponsibilityCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "PKPFlag",
											"type": "String"
										},
										"sink": {
											"name": "PKPFlag",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DocumentNumber",
											"type": "String"
										},
										"sink": {
											"name": "DocumentNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CustomerOrderNumber",
											"type": "String"
										},
										"sink": {
											"name": "CustomerOrderNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DeliveryTransactionCode",
											"type": "String"
										},
										"sink": {
											"name": "DeliveryTransactionCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TaxInvoiceNumber",
											"type": "String"
										},
										"sink": {
											"name": "TaxInvoiceNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TaxInvoiceName",
											"type": "String"
										},
										"sink": {
											"name": "TaxInvoiceName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "NPWP",
											"type": "String"
										},
										"sink": {
											"name": "NPWP",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OutletCreditDay",
											"type": "Int32"
										},
										"sink": {
											"name": "OutletCreditDay",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ReceiptNumber",
											"type": "String"
										},
										"sink": {
											"name": "ReceiptNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CallingDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "CallingDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "IsDelete",
											"type": "Boolean"
										},
										"sink": {
											"name": "IsDelete",
											"type": "Boolean"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DEV_IaaS_ATB",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DEV_PaaS_ATB",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Get Metadata1",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "SendUserGps",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists",
								"size",
								"itemName",
								"itemType"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true
							}
						}
					}
				],
				"folder": {
					"name": "Development"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DEV_IaaS_ATB')]",
				"[concat(variables('factoryId'), '/datasets/SendUserGps')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy Survey Answer Production')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select * from dbo.[SurveyTransaction] A\n\t\twhere StartSurveyDateTime >= '2019-06-01'\n"
							},
							"sink": {
								"type": "AzureSqlSink",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Site",
											"type": "Int32"
										},
										"sink": {
											"name": "Site",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Guid",
											"type": "Guid"
										},
										"sink": {
											"name": "Guid",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "Route",
											"type": "String"
										},
										"sink": {
											"name": "Route",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OutletNumber",
											"type": "String"
										},
										"sink": {
											"name": "OutletNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "WindowsId",
											"type": "String"
										},
										"sink": {
											"name": "WindowsId",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SurveyId",
											"type": "Int32"
										},
										"sink": {
											"name": "SurveyId",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "SurveyDescription",
											"type": "String"
										},
										"sink": {
											"name": "SurveyDescription",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "StartSurveyDateTime",
											"type": "DateTime"
										},
										"sink": {
											"name": "StartSurveyDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "EndSurveyDateTime",
											"type": "DateTime"
										},
										"sink": {
											"name": "EndSurveyDateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Comment",
											"type": "String"
										},
										"sink": {
											"name": "Comment",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "SurveyType",
											"type": "String"
										},
										"sink": {
											"name": "SurveyType",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FlagTransaction",
											"type": "String"
										},
										"sink": {
											"name": "FlagTransaction",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TotalScore",
											"type": "Double"
										},
										"sink": {
											"name": "TotalScore",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "CallHistoryGuid",
											"type": "Guid"
										},
										"sink": {
											"name": "CallHistoryGuid",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "ReasonCode",
											"type": "String"
										},
										"sink": {
											"name": "ReasonCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ReasonDescription",
											"type": "String"
										},
										"sink": {
											"name": "ReasonDescription",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "Production_Sales_IaaS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Production_Report_SurveyTransaction",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Production"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Production_Sales_IaaS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MD_BUSalesStructure')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy from IaaS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "if to Date blank",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "If from Date blank",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[dbo].[spExport_SM_REF_BU_SR_STRUCTURE]",
								"storedProcedureParameters": {
									"SyncFromDate": {
										"type": "DateTime",
										"value": {
											"value": "@variables('SyncDataFrom')",
											"type": "Expression"
										}
									},
									"SyncToDate": {
										"type": "DateTime",
										"value": {
											"value": "@variables('SyncDataTo')",
											"type": "Expression"
										}
									}
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"sqlWriterStoredProcedureName": "[[dbo].[spMD_SM_REF_BU_SR_STRUCTURE_Upsert]",
								"sqlWriterTableType": "typeMD_SM_REF_BU_SR_STRUCTURE",
								"storedProcedureTableTypeParameterName": "MD_SM_REF_BU_SR_STRUCTURE"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ID",
											"type": "Int32"
										},
										"sink": {
											"name": "ID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "PERIOD",
											"type": "String"
										},
										"sink": {
											"name": "PERIOD",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SR_CODE",
											"type": "String"
										},
										"sink": {
											"name": "SR_CODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SR_NAME",
											"type": "String"
										},
										"sink": {
											"name": "SR_NAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DSM_CODE",
											"type": "String"
										},
										"sink": {
											"name": "DSM_CODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DSM_NAME",
											"type": "String"
										},
										"sink": {
											"name": "DSM_NAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SM_CODE",
											"type": "String"
										},
										"sink": {
											"name": "SM_CODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SM_DESC",
											"type": "String"
										},
										"sink": {
											"name": "SM_DESC",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SM_NAME",
											"type": "String"
										},
										"sink": {
											"name": "SM_NAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "GM_CODE",
											"type": "String"
										},
										"sink": {
											"name": "GM_CODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "GM_DESC",
											"type": "String"
										},
										"sink": {
											"name": "GM_DESC",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "GM_NAME",
											"type": "String"
										},
										"sink": {
											"name": "GM_NAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SLSGRP_CODE",
											"type": "String"
										},
										"sink": {
											"name": "SLSGRP_CODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SLSGRP_DESC",
											"type": "String"
										},
										"sink": {
											"name": "SLSGRP_DESC",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SLSGRP_NAME",
											"type": "String"
										},
										"sink": {
											"name": "SLSGRP_NAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BU_CODE",
											"type": "String"
										},
										"sink": {
											"name": "BU_CODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BU_DESC",
											"type": "String"
										},
										"sink": {
											"name": "BU_DESC",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BU_NAME",
											"type": "String"
										},
										"sink": {
											"name": "BU_NAME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BUSINESS_UNIT_GROUP_CODE",
											"type": "String"
										},
										"sink": {
											"name": "BUSINESS_UNIT_GROUP_CODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BUSINESS_UNIT_GROUP_DESC",
											"type": "String"
										},
										"sink": {
											"name": "BUSINESS_UNIT_GROUP_DESC",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TOTAL_CCAI",
											"type": "String"
										},
										"sink": {
											"name": "TOTAL_CCAI",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FLAG_KAM",
											"type": "String"
										},
										"sink": {
											"name": "FLAG_KAM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FLAG_ACTIVE",
											"type": "String"
										},
										"sink": {
											"name": "FLAG_ACTIVE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FLAG_MDS",
											"type": "String"
										},
										"sink": {
											"name": "FLAG_MDS",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LastUpdatedECoaching",
											"type": "String"
										},
										"sink": {
											"name": "LastUpdatedECoaching",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LastUpdatedDateTime",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastUpdatedDateTime",
											"type": "DateTime"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "Production_MasterData_IaaS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Production_Report_SAM_Users",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Update Last Sync Date",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy from IaaS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spImportFromSAM_UpsertLastSyncDate]",
							"storedProcedureParameters": {
								"ErrorMessage": {
									"value": null,
									"type": "String"
								},
								"LastSyncDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTimeOffset"
								},
								"Status": {
									"value": {
										"value": "@activity('Copy from IaaS').output.executionDetails[0].status",
										"type": "Expression"
									},
									"type": "String"
								},
								"SyncDataFrom": {
									"value": {
										"value": "@variables('SyncDataFrom')",
										"type": "Expression"
									},
									"type": "DateTimeOffset"
								},
								"SyncDataTo": {
									"value": {
										"value": "@variables('SyncDataTo')",
										"type": "Expression"
									},
									"type": "DateTimeOffset"
								},
								"TableName": {
									"value": {
										"value": "@variables('TableName')",
										"type": "Expression"
									},
									"type": "String"
								},
								"TotalRecords": {
									"value": {
										"value": "@activity('Copy from IaaS').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "IR2_REPORT_PRODUCTION",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Update Error Message",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy from IaaS",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spImportFromSAM_UpsertLastSyncDate]",
							"storedProcedureParameters": {
								"ErrorMessage": {
									"value": {
										"value": "@activity('Copy from IaaS').error.message",
										"type": "Expression"
									},
									"type": "String"
								},
								"LastSyncDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTimeOffset"
								},
								"Status": {
									"value": "Error",
									"type": "String"
								},
								"SyncDataFrom": {
									"value": {
										"value": "@variables('SyncDataFrom')",
										"type": "Expression"
									},
									"type": "DateTimeOffset"
								},
								"SyncDataTo": {
									"value": {
										"value": "@variables('SyncDataTo')",
										"type": "Expression"
									},
									"type": "DateTimeOffset"
								},
								"TableName": {
									"value": {
										"value": "@variables('TableName')",
										"type": "Expression"
									},
									"type": "String"
								},
								"TotalRecords": {
									"value": null,
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "IR2_REPORT_PRODUCTION",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup Sync Date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[spImportFromSAM_GetLastSyncDate]",
								"storedProcedureParameters": {
									"TableName": {
										"type": "String",
										"value": {
											"value": "@variables('TableName')",
											"type": "Expression"
										}
									}
								}
							},
							"dataset": {
								"referenceName": "Production_Report_SAM_Customer",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If from Date blank",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Lookup Sync Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(pipeline().parameters.SyncDataFrom, '-')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "SyncDataFrom from parameter",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "SyncDataFrom",
										"value": {
											"value": "@pipeline().parameters.SyncDataFrom",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "SyncFromData from Table",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "SyncDataFrom",
										"value": {
											"value": "@activity('Lookup Sync Date').output.firstrow.SyncDataTo",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "if to Date blank",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Lookup Sync Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(pipeline().parameters.SyncDataTo, '-')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "SyncDataTo from Parameter",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "SyncDataTo",
										"value": {
											"value": "@pipeline().parameters.SyncDataTo",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "SyncDataTo from Table",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "SyncDataTo",
										"value": {
											"value": "@activity('Lookup Sync Date').output.firstrow.NowTime",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"SyncDataFrom": {
						"type": "string",
						"defaultValue": "-"
					},
					"SyncDataTo": {
						"type": "string",
						"defaultValue": "-"
					}
				},
				"variables": {
					"TableName": {
						"type": "String",
						"defaultValue": "MD_SM_REF_BU_SR_STRUCTURE"
					},
					"SyncDataFrom": {
						"type": "String"
					},
					"SyncDataTo": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Production/Export To Reporting/from MD"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Production_MasterData_IaaS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAM Call History All')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy from IaaS",
						"description": "Copy Call History",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "if to Date blank",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "If from Date blank",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[dbo].[spExport_CallHistory]",
								"storedProcedureParameters": {
									"SyncFromDate": {
										"type": "DateTime",
										"value": {
											"value": "@variables('SyncDataFrom')",
											"type": "Expression"
										}
									},
									"SyncToDate": {
										"type": "DateTime",
										"value": {
											"value": "@variables('SyncDataTo')",
											"type": "Expression"
										}
									}
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"sqlWriterStoredProcedureName": "[[dbo].[spSAM_CallHistory_upsert]",
								"sqlWriterTableType": "typeSAM_CallHistory",
								"storedProcedureTableTypeParameterName": "SAM_CallHistory"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CallHistoryId",
											"type": "Int32"
										},
										"sink": {
											"name": "CallHistoryId",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Site",
											"type": "Int32"
										},
										"sink": {
											"name": "Site",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ScreenID",
											"type": "String"
										},
										"sink": {
											"name": "ScreenID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "UserId",
											"type": "Guid"
										},
										"sink": {
											"name": "UserId",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "PinId",
											"type": "String"
										},
										"sink": {
											"name": "PinId",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RouteId",
											"type": "String"
										},
										"sink": {
											"name": "RouteId",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CustomerNumber",
											"type": "String"
										},
										"sink": {
											"name": "CustomerNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LocationCode",
											"type": "String"
										},
										"sink": {
											"name": "LocationCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "StartTime",
											"type": "DateTime"
										},
										"sink": {
											"name": "StartTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "EndTime",
											"type": "DateTime"
										},
										"sink": {
											"name": "EndTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Longitude",
											"type": "Double"
										},
										"sink": {
											"name": "Longitude",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Latitude",
											"type": "Double"
										},
										"sink": {
											"name": "Latitude",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Accuracy",
											"type": "Int32"
										},
										"sink": {
											"name": "Accuracy",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ScheduleTypeId",
											"type": "String"
										},
										"sink": {
											"name": "ScheduleTypeId",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SystemStatus",
											"type": "Int32"
										},
										"sink": {
											"name": "SystemStatus",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "CallStatus",
											"type": "String"
										},
										"sink": {
											"name": "CallStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CancelledReason",
											"type": "String"
										},
										"sink": {
											"name": "CancelledReason",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FollowSequence",
											"type": "Boolean"
										},
										"sink": {
											"name": "FollowSequence",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "RequestResequence",
											"type": "Boolean"
										},
										"sink": {
											"name": "RequestResequence",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "ProposeOutletBefore",
											"type": "Int32"
										},
										"sink": {
											"name": "ProposeOutletBefore",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ProposeOutletAfter",
											"type": "Int32"
										},
										"sink": {
											"name": "ProposeOutletAfter",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Remarks",
											"type": "String"
										},
										"sink": {
											"name": "Remarks",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "UploadedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "UploadedDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "SystemDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "SystemDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "OffSequenceReason",
											"type": "String"
										},
										"sink": {
											"name": "OffSequenceReason",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Guid",
											"type": "Guid"
										},
										"sink": {
											"name": "Guid",
											"type": "Guid"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "Production_Sales_IaaS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Production_Report_SAM_Users",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Update Last Sync Date",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy from IaaS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spImportFromSAM_UpsertLastSyncDate]",
							"storedProcedureParameters": {
								"ErrorMessage": {
									"value": null,
									"type": "String"
								},
								"LastSyncDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTimeOffset"
								},
								"Status": {
									"value": {
										"value": "@activity('Copy from IaaS').output.executionDetails[0].status",
										"type": "Expression"
									},
									"type": "String"
								},
								"SyncDataFrom": {
									"value": {
										"value": "@variables('SyncDataFrom')",
										"type": "Expression"
									},
									"type": "DateTimeOffset"
								},
								"SyncDataTo": {
									"value": {
										"value": "@variables('SyncDataTo')",
										"type": "Expression"
									},
									"type": "DateTimeOffset"
								},
								"TableName": {
									"value": {
										"value": "@variables('TableName')",
										"type": "Expression"
									},
									"type": "String"
								},
								"TotalRecords": {
									"value": {
										"value": "@activity('Copy from IaaS').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "IR2_REPORT_PRODUCTION",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Update Error Message",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy from IaaS",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spImportFromSAM_UpsertLastSyncDate]",
							"storedProcedureParameters": {
								"ErrorMessage": {
									"value": {
										"value": "@activity('Copy from IaaS').error.message",
										"type": "Expression"
									},
									"type": "String"
								},
								"LastSyncDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTimeOffset"
								},
								"Status": {
									"value": "Error",
									"type": "String"
								},
								"SyncDataFrom": {
									"value": {
										"value": "@variables('SyncDataFrom')",
										"type": "Expression"
									},
									"type": "DateTimeOffset"
								},
								"SyncDataTo": {
									"value": {
										"value": "@variables('SyncDataTo')",
										"type": "Expression"
									},
									"type": "DateTimeOffset"
								},
								"TableName": {
									"value": {
										"value": "@variables('TableName')",
										"type": "Expression"
									},
									"type": "String"
								},
								"TotalRecords": {
									"value": null,
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "IR2_REPORT_PRODUCTION",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup Sync Date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[spImportFromSAM_GetLastSyncDate]",
								"storedProcedureParameters": {
									"TableName": {
										"type": "String",
										"value": {
											"value": "@variables('TableName')",
											"type": "Expression"
										}
									}
								}
							},
							"dataset": {
								"referenceName": "Production_Report_SAM_Customer",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If from Date blank",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Lookup Sync Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(pipeline().parameters.SyncDataFrom, '-')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "SyncDataFrom from parameter",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "SyncDataFrom",
										"value": {
											"value": "@pipeline().parameters.SyncDataFrom",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "SyncFromData from Table",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "SyncDataFrom",
										"value": {
											"value": "@activity('Lookup Sync Date').output.firstrow.SyncDataTo",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "if to Date blank",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Lookup Sync Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(pipeline().parameters.SyncDataTo, '-')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "SyncDataTo from Parameter",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "SyncDataTo",
										"value": {
											"value": "@pipeline().parameters.SyncDataTo",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "SyncDataTo from now function",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "SyncDataTo",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Copy from IaaS Detail",
						"description": "Copy Call History Detail",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Update Last Sync Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[dbo].[spExport_CallHistoryDetail]",
								"storedProcedureParameters": {
									"SyncFromDate": {
										"type": "DateTime",
										"value": {
											"value": "@variables('SyncDataFrom')",
											"type": "Expression"
										}
									},
									"SyncToDate": {
										"type": "DateTime",
										"value": {
											"value": "@variables('SyncDataTo')",
											"type": "Expression"
										}
									}
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"sqlWriterStoredProcedureName": "[[dbo].[spSAM_CallHistoryDetail_upsert]",
								"sqlWriterTableType": "typeSAM_CallHistoryDetail",
								"storedProcedureTableTypeParameterName": "SAM_CallHistoryDetail"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CallHistoryId",
											"type": "Int32"
										},
										"sink": {
											"name": "CallHistoryId",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ScreenID",
											"type": "String"
										},
										"sink": {
											"name": "ScreenID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Function",
											"type": "String"
										},
										"sink": {
											"name": "Function",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Longitude",
											"type": "Double"
										},
										"sink": {
											"name": "Longitude",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Latitude",
											"type": "Double"
										},
										"sink": {
											"name": "Latitude",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "GPSMatch",
											"type": "Boolean"
										},
										"sink": {
											"name": "GPSMatch",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "Accuracy",
											"type": "Int32"
										},
										"sink": {
											"name": "Accuracy",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DateTime",
											"type": "DateTime"
										},
										"sink": {
											"name": "DateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Battery",
											"type": "Double"
										},
										"sink": {
											"name": "Battery",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Signal",
											"type": "Int32"
										},
										"sink": {
											"name": "Signal",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "CellularID",
											"type": "Int64"
										},
										"sink": {
											"name": "CellularID",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "LocAreaCode",
											"type": "Int32"
										},
										"sink": {
											"name": "LocAreaCode",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "MOCNTRYCode",
											"type": "Int32"
										},
										"sink": {
											"name": "MOCNTRYCode",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "MOCNETCode",
											"type": "Int32"
										},
										"sink": {
											"name": "MOCNETCode",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "SystemDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "SystemDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "UTCTime",
											"type": "DateTime"
										},
										"sink": {
											"name": "UTCTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "BasisProcessingStatus",
											"type": "Int32"
										},
										"sink": {
											"name": "BasisProcessingStatus",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Message",
											"type": "String"
										},
										"sink": {
											"name": "Message",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Guid",
											"type": "Guid"
										},
										"sink": {
											"name": "Guid",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "ReasonCode",
											"type": "String"
										},
										"sink": {
											"name": "ReasonCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CallHistoryGuid",
											"type": "Guid"
										},
										"sink": {
											"name": "CallHistoryGuid",
											"type": "Guid"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "Production_Sales_IaaS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Production_Report_SAM_Users",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Update Success Child",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy from IaaS Detail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spImportFromSAM_UpsertLastSyncDate]",
							"storedProcedureParameters": {
								"ErrorMessage": {
									"value": null,
									"type": "String"
								},
								"LastSyncDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTimeOffset"
								},
								"Status": {
									"value": {
										"value": "@activity('Copy from IaaS Detail').output.executionDetails[0].status",
										"type": "Expression"
									},
									"type": "String"
								},
								"SyncDataFrom": {
									"value": {
										"value": "@variables('SyncDataFrom')",
										"type": "Expression"
									},
									"type": "DateTimeOffset"
								},
								"SyncDataTo": {
									"value": {
										"value": "@variables('SyncDataTo')",
										"type": "Expression"
									},
									"type": "DateTimeOffset"
								},
								"TableName": {
									"value": {
										"value": "@variables('ChildTableName')",
										"type": "Expression"
									},
									"type": "String"
								},
								"TotalRecords": {
									"value": {
										"value": "@activity('Copy from IaaS Detail').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "IR2_REPORT_PRODUCTION",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Update Error Message Child",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy from IaaS Detail",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spImportFromSAM_UpsertLastSyncDate]",
							"storedProcedureParameters": {
								"ErrorMessage": {
									"value": {
										"value": "@activity('Copy from IaaS Detail').error.message",
										"type": "Expression"
									},
									"type": "String"
								},
								"LastSyncDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTimeOffset"
								},
								"Status": {
									"value": "Error",
									"type": "String"
								},
								"SyncDataFrom": {
									"value": {
										"value": "@variables('SyncDataFrom')",
										"type": "Expression"
									},
									"type": "DateTimeOffset"
								},
								"SyncDataTo": {
									"value": {
										"value": "@variables('SyncDataTo')",
										"type": "Expression"
									},
									"type": "DateTimeOffset"
								},
								"TableName": {
									"value": {
										"value": "@variables('ChildTableName')",
										"type": "Expression"
									},
									"type": "String"
								},
								"TotalRecords": {
									"value": null,
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "IR2_REPORT_PRODUCTION",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"SyncDataFrom": {
						"type": "string",
						"defaultValue": "-"
					},
					"SyncDataTo": {
						"type": "string",
						"defaultValue": "-"
					}
				},
				"variables": {
					"TableName": {
						"type": "String",
						"defaultValue": "SAM_CallHistory"
					},
					"SyncDataFrom": {
						"type": "String"
					},
					"SyncDataTo": {
						"type": "String"
					},
					"ChildTableName": {
						"type": "String",
						"defaultValue": "SAM_CallHistoryDetail"
					}
				},
				"folder": {
					"name": "Production/Export To Reporting/from SAM"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Production_Sales_IaaS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SAM Call History Detail')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy from IaaS",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "if to Date blank",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "If from Date blank",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[dbo].[spExport_CallHistoryDetail]",
								"storedProcedureParameters": {
									"SyncFromDate": {
										"type": "DateTime",
										"value": {
											"value": "@variables('SyncDataFrom')",
											"type": "Expression"
										}
									},
									"SyncToDate": {
										"type": "DateTime",
										"value": {
											"value": "@variables('SyncDataTo')",
											"type": "Expression"
										}
									}
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"sqlWriterStoredProcedureName": "[[dbo].[spSAM_CallHistoryDetail_upsert]",
								"sqlWriterTableType": "typeSAM_CallHistoryDetail",
								"storedProcedureTableTypeParameterName": "SAM_CallHistoryDetail"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CallHistoryId",
											"type": "Int32"
										},
										"sink": {
											"name": "CallHistoryId",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ScreenID",
											"type": "String"
										},
										"sink": {
											"name": "ScreenID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Function",
											"type": "String"
										},
										"sink": {
											"name": "Function",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Longitude",
											"type": "Double"
										},
										"sink": {
											"name": "Longitude",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Latitude",
											"type": "Double"
										},
										"sink": {
											"name": "Latitude",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "GPSMatch",
											"type": "Boolean"
										},
										"sink": {
											"name": "GPSMatch",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "Accuracy",
											"type": "Int32"
										},
										"sink": {
											"name": "Accuracy",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DateTime",
											"type": "DateTime"
										},
										"sink": {
											"name": "DateTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Battery",
											"type": "Double"
										},
										"sink": {
											"name": "Battery",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "Signal",
											"type": "Int32"
										},
										"sink": {
											"name": "Signal",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "CellularID",
											"type": "Int64"
										},
										"sink": {
											"name": "CellularID",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "LocAreaCode",
											"type": "Int32"
										},
										"sink": {
											"name": "LocAreaCode",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "MOCNTRYCode",
											"type": "Int32"
										},
										"sink": {
											"name": "MOCNTRYCode",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "MOCNETCode",
											"type": "Int32"
										},
										"sink": {
											"name": "MOCNETCode",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "SystemDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "SystemDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "UTCTime",
											"type": "DateTime"
										},
										"sink": {
											"name": "UTCTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "BasisProcessingStatus",
											"type": "Int32"
										},
										"sink": {
											"name": "BasisProcessingStatus",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Message",
											"type": "String"
										},
										"sink": {
											"name": "Message",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Guid",
											"type": "Guid"
										},
										"sink": {
											"name": "Guid",
											"type": "Guid"
										}
									},
									{
										"source": {
											"name": "ReasonCode",
											"type": "String"
										},
										"sink": {
											"name": "ReasonCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CallHistoryGuid",
											"type": "Guid"
										},
										"sink": {
											"name": "CallHistoryGuid",
											"type": "Guid"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "Production_Sales_IaaS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Production_Report_SAM_Users",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Update Last Sync Date",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy from IaaS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spImportFromSAM_UpsertLastSyncDate]",
							"storedProcedureParameters": {
								"ErrorMessage": {
									"value": null,
									"type": "String"
								},
								"LastSyncDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTimeOffset"
								},
								"Status": {
									"value": {
										"value": "@activity('Copy from IaaS').output.executionDetails[0].status",
										"type": "Expression"
									},
									"type": "String"
								},
								"SyncDataFrom": {
									"value": {
										"value": "@variables('SyncDataFrom')",
										"type": "Expression"
									},
									"type": "DateTimeOffset"
								},
								"SyncDataTo": {
									"value": {
										"value": "@variables('SyncDataTo')",
										"type": "Expression"
									},
									"type": "DateTimeOffset"
								},
								"TableName": {
									"value": {
										"value": "@variables('TableName')",
										"type": "Expression"
									},
									"type": "String"
								},
								"TotalRecords": {
									"value": {
										"value": "@activity('Copy from IaaS').output.rowsCopied",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "IR2_REPORT_PRODUCTION",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Update Error Message",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy from IaaS",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spImportFromSAM_UpsertLastSyncDate]",
							"storedProcedureParameters": {
								"ErrorMessage": {
									"value": {
										"value": "@activity('Copy from IaaS').error.message",
										"type": "Expression"
									},
									"type": "String"
								},
								"LastSyncDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "DateTimeOffset"
								},
								"Status": {
									"value": "Error",
									"type": "String"
								},
								"SyncDataFrom": {
									"value": {
										"value": "@variables('SyncDataFrom')",
										"type": "Expression"
									},
									"type": "DateTimeOffset"
								},
								"SyncDataTo": {
									"value": {
										"value": "@variables('SyncDataTo')",
										"type": "Expression"
									},
									"type": "DateTimeOffset"
								},
								"TableName": {
									"value": {
										"value": "@variables('TableName')",
										"type": "Expression"
									},
									"type": "String"
								},
								"TotalRecords": {
									"value": null,
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "IR2_REPORT_PRODUCTION",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Lookup Sync Date",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[spImportFromSAM_GetLastSyncDate]",
								"storedProcedureParameters": {
									"TableName": {
										"type": "String",
										"value": {
											"value": "@variables('TableName')",
											"type": "Expression"
										}
									}
								}
							},
							"dataset": {
								"referenceName": "Production_Report_SAM_Customer",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If from Date blank",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Lookup Sync Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(pipeline().parameters.SyncDataFrom, '-')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "SyncDataFrom from parameter",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "SyncDataFrom",
										"value": {
											"value": "@pipeline().parameters.SyncDataFrom",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "SyncFromData from Table",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "SyncDataFrom",
										"value": {
											"value": "@activity('Lookup Sync Date').output.firstrow.SyncDataTo",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "if to Date blank",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Lookup Sync Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(pipeline().parameters.SyncDataTo, '-')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "SyncDataTo from Parameter",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "SyncDataTo",
										"value": {
											"value": "@pipeline().parameters.SyncDataTo",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "SyncDataTo from now function",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "SyncDataTo",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"SyncDataFrom": {
						"type": "string",
						"defaultValue": "-"
					},
					"SyncDataTo": {
						"type": "string",
						"defaultValue": "-"
					}
				},
				"variables": {
					"TableName": {
						"type": "String",
						"defaultValue": "SAM_CallHistoryDetail"
					},
					"SyncDataFrom": {
						"type": "String",
						"defaultValue": "2019-08-11"
					},
					"SyncDataTo": {
						"type": "String",
						"defaultValue": "2019-08-12"
					}
				},
				"folder": {
					"name": "Production/Export To Reporting/from SAM"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Production_Sales_IaaS')]"
			]
		}
	]
}