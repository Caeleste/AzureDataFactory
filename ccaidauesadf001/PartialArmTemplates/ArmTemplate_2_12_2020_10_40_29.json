{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ccaidauesadf001"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/eTax')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "eTax 1 File Management",
							"type": "PipelineReference"
						},
						"parameters": {
							"directory": "VAT Output 2\\VAT Output 3"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "eTax 3 Send Email",
							"type": "PipelineReference"
						},
						"parameters": {
							"sourceDirectory": "VAT Output 2\\VAT Output 3"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "eTax 4 Read Status",
							"type": "PipelineReference"
						},
						"parameters": {
							"sourceDirectory": "VAT Output 2\\VAT Output 3"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 10,
						"startTime": "2019-12-10T05:16:00.000Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Daily Run Trigger Trx 8-11-14-17-20')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Integration Copy Data",
							"type": "PipelineReference"
						},
						"parameters": {
							"TriggerGroup": "T-D-8-11-14-17-20"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2020-02-07T08:43:00.000Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								1,
								4,
								7,
								10,
								13
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Hourly Run Trigger - Every 4 hours')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Integration Copy Data",
							"type": "PipelineReference"
						},
						"parameters": {
							"TriggerGroup": "T-H-4"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 4,
						"startTime": "2020-02-08T07:31:00.000Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get List of File",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "File_in_idcbtap22",
								"type": "DatasetReference",
								"parameters": {
									"directory": {
										"value": "@concat(pipeline().parameters.directory,'\\Sending')",
										"type": "Expression"
									},
									"filename": "*.*"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "FileServerReadSettings",
								"recursive": true
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter File only",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter File only').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "Filename",
										"value": {
											"value": "@concat(item().name, ',')",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Filter File only",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get List of File",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get List of File').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type, 'File')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ForEach1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "Final",
							"value": {
								"value": "@variables('Filename')",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"directory": {
						"type": "string",
						"defaultValue": "VAT Output 2\\VAT Output 3"
					}
				},
				"variables": {
					"Filename": {
						"type": "String"
					},
					"Final": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}