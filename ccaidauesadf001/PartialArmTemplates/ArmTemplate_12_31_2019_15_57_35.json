{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ccaidauesadf001"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Integration Report')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "get Table to copy",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('SELECT * FROM ',variables('tableConfiguration'), ' ORDER BY Sequence ASC')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "GenericAzureSQLDatabase",
								"type": "DatasetReference",
								"parameters": {
									"table": {
										"value": "@variables('tableConfiguration')",
										"type": "Expression"
									},
									"secret": {
										"value": "@variables('secretConfiguration')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "get Table to copy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('get Table to copy').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Execute Copy SQL",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Copy SQL to SQL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"sourceSecret": {
												"value": "@item().SourceSecret",
												"type": "Expression"
											},
											"sourceTable": {
												"value": "@item().SourceTable",
												"type": "Expression"
											},
											"sourceDbType": {
												"value": "@item().SourceDatabaseType",
												"type": "Expression"
											},
											"targetSecret": {
												"value": "@item().TargetSecret",
												"type": "Expression"
											},
											"targetTable": {
												"value": "@item().TargetTable",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Proses data to copy",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Execute Copy SQL",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": {
											"value": "@item().StoreProcedureProcess",
											"type": "Expression"
										}
									},
									"linkedServiceName": {
										"referenceName": "GenericAzureSqlDatabase",
										"type": "LinkedServiceReference",
										"parameters": {
											"Secret": {
												"value": "@item().TargetSecret",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Execute Send Email success",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Proses data to copy",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Sending Email",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"from": {
												"value": "@variables('emailFrom')",
												"type": "Expression"
											},
											"to": {
												"value": "@variables('emailTo')",
												"type": "Expression"
											},
											"message_id": {
												"value": "@pipeline().TriggerId",
												"type": "Expression"
											},
											"subject": {
												"value": "@concat('Integration [', pipeline().RunId,'] - ', item().SourceTable, ' is success')",
												"type": "Expression"
											},
											"content": {
												"value": "@concat('Hi, This Integration ', item().SourceTable, ' is success')",
												"type": "Expression"
											},
											"Queue_id": {
												"value": "@variables('emailQueue')",
												"type": "Expression"
											},
											"cc": {
												"value": "@variables('emailCc')",
												"type": "Expression"
											},
											"bcc": {
												"value": "@variables('emailBcc')",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Execute Send Email fail to copy",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Execute Copy SQL",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Sending Email",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"from": {
												"value": "@variables('emailFrom')",
												"type": "Expression"
											},
											"to": {
												"value": "@variables('emailTo')",
												"type": "Expression"
											},
											"message_id": {
												"value": "@pipeline().TriggerId",
												"type": "Expression"
											},
											"subject": {
												"value": "@concat('Integration [', pipeline().RunId,'] - ', item().SourceTable, ' is error when copy file')",
												"type": "Expression"
											},
											"content": {
												"value": "@concat('Hi, This Integration when copy from ', item().SourceTable, ' into ', item().TargetTable)",
												"type": "Expression"
											},
											"Queue_id": {
												"value": "@variables('emailQueue')",
												"type": "Expression"
											},
											"cc": {
												"value": "@variables('emailCc')",
												"type": "Expression"
											},
											"bcc": {
												"value": "@variables('emailBcc')",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Execute Send Email fail to process",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Proses data to copy",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Sending Email",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"from": {
												"value": "@variables('emailFrom')",
												"type": "Expression"
											},
											"to": {
												"value": "@variables('emailTo')",
												"type": "Expression"
											},
											"message_id": {
												"value": "@pipeline().TriggerId",
												"type": "Expression"
											},
											"subject": {
												"value": "@concat('Integration [', pipeline().RunId,'] - ', item().SourceTable, ' is failed when process ', item().StoreProcedureProcess)",
												"type": "Expression"
											},
											"content": {
												"value": "@concat('Hi, This Integration ', item().SourceTable, ' is success')",
												"type": "Expression"
											},
											"Queue_id": {
												"value": "@variables('emailQueue')",
												"type": "Expression"
											},
											"cc": {
												"value": "@variables('emailCc')",
												"type": "Expression"
											},
											"bcc": {
												"value": "@variables('emailBcc')",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"variables": {
					"secretConfiguration": {
						"type": "String",
						"defaultValue": "azure-sql-prd-report"
					},
					"tableConfiguration": {
						"type": "String",
						"defaultValue": "vwGetIntegrationConfigurations"
					},
					"emailTo": {
						"type": "String",
						"defaultValue": "andreas.herrinto@ccamatil.com"
					},
					"emailCc": {
						"type": "String",
						"defaultValue": "siska.limanto@ccamatil.com"
					},
					"emailBcc": {
						"type": "String"
					},
					"emailFrom": {
						"type": "String",
						"defaultValue": "idn.adf.ReportIntegration@ccamatil.com"
					},
					"emailQueue": {
						"type": "String",
						"defaultValue": "664CDAFA44B642DDB511046AFC2C732A"
					}
				},
				"folder": {
					"name": "Production"
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}