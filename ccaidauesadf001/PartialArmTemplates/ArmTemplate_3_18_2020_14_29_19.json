{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ccaidauesadf001"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/GDM Photo Taking')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DataFlow_GDMPhotoTaking",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DataFlow_GDMPhotoTaking",
								"type": "DataFlowReference",
								"datasetParameters": {
									"SurveyTransaction": {
										"table": {
											"value": "@pipeline().parameters.surveyTable",
											"type": "Expression"
										},
										"secret": {
											"value": "@pipeline().parameters.DbSurvey",
											"type": "Expression"
										}
									},
									"Customers": {
										"table": {
											"value": "@pipeline().parameters.customerTable",
											"type": "Expression"
										},
										"secret": {
											"value": "@pipeline().parameters.DbMasterData",
											"type": "Expression"
										}
									},
									"SinkToData": {
										"table": {
											"value": "@pipeline().parameters.gdmPhotoTable",
											"type": "Expression"
										},
										"secret": {
											"value": "@pipeline().parameters.DbEds",
											"type": "Expression"
										}
									}
								}
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"parameters": {
					"DbSurvey": {
						"type": "string",
						"defaultValue": "azure-sql-dev-survey"
					},
					"DbMasterData": {
						"type": "string",
						"defaultValue": "azure-sql-dev-masterdata"
					},
					"DbEds": {
						"type": "string",
						"defaultValue": "azure-sql-dev-eds"
					},
					"surveyTable": {
						"type": "string",
						"defaultValue": "vwADF_GDMPhotoTaking"
					},
					"customerTable": {
						"type": "string",
						"defaultValue": "vwADF_Customers"
					},
					"gdmPhotoTable": {
						"type": "string",
						"defaultValue": "STG_GDMPhotoTaking"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy Data SQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "get Table to copy Sequence",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": {
									"value": "spIntegration_Configurations",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"TriggerGroup": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.TriggerGroup",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "GenericAzureSQLDatabase",
								"type": "DatasetReference",
								"parameters": {
									"table": {
										"value": "IntegrationConfigurations",
										"type": "Expression"
									},
									"secret": {
										"value": "@variables('secretConfiguration')",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "get Table to copy Sequence",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('get Table to copy Sequence').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute Copy SQL",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Copy SQL to SQL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"sourceSecret": {
												"value": "@item().SourceSecret",
												"type": "Expression"
											},
											"sourceTable": {
												"value": "@item().SourceTable",
												"type": "Expression"
											},
											"sourceDbType": {
												"value": "@item().SourceDatabaseType",
												"type": "Expression"
											},
											"targetSecret": {
												"value": "@item().TargetSecret",
												"type": "Expression"
											},
											"targetTable": {
												"value": "@item().TargetTable",
												"type": "Expression"
											},
											"targetDbType": {
												"value": "@item().TargetDatabaseType",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Execute Send Email fail to copy",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Execute Copy SQL",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Sending Email",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"from": {
												"value": "@variables('emailFrom')",
												"type": "Expression"
											},
											"to": {
												"value": "@variables('emailTo')",
												"type": "Expression"
											},
											"message_id": {
												"value": "@guid()",
												"type": "Expression"
											},
											"subject": {
												"value": "@concat('Integration FAILED - [', pipeline().RunId,'] - ', item().SourceTable, ' is error when copy file')",
												"type": "Expression"
											},
											"content": {
												"value": "@concat('Hi, This Integration when copy from ', item().SourceTable, ' into ', item().TargetTable)",
												"type": "Expression"
											},
											"Queue_id": {
												"value": "@variables('emailQueue')",
												"type": "Expression"
											},
											"cc": {
												"value": "@variables('emailCc')",
												"type": "Expression"
											},
											"bcc": {
												"value": "@variables('emailBcc')",
												"type": "Expression"
											},
											"attachments": " "
										}
									}
								},
								{
									"name": "If Store Procedure is not blank",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Execute Copy SQL",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@not(equals(item().StoreProcedureProcess,''))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Proses data after copy",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": {
														"value": "@item().StoreProcedureProcess",
														"type": "Expression"
													}
												},
												"linkedServiceName": {
													"referenceName": "GenericAzureSqlDatabase",
													"type": "LinkedServiceReference",
													"parameters": {
														"Secret": {
															"value": "@item().TargetSecret",
															"type": "Expression"
														}
													}
												}
											},
											{
												"name": "Execute Send Email success",
												"type": "ExecutePipeline",
												"dependsOn": [
													{
														"activity": "Proses data after copy",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "Sending Email",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"from": {
															"value": "@variables('emailFrom')",
															"type": "Expression"
														},
														"to": {
															"value": "@variables('emailTo')",
															"type": "Expression"
														},
														"message_id": {
															"value": "@guid()",
															"type": "Expression"
														},
														"subject": {
															"value": "@concat('Integration SUCCESS - [', pipeline().RunId,'] - ', item().SourceTable, ' is success')",
															"type": "Expression"
														},
														"content": {
															"value": "@concat('Hi, This Integration ', item().SourceTable, ' is success')",
															"type": "Expression"
														},
														"Queue_id": {
															"value": "@variables('emailQueue')",
															"type": "Expression"
														},
														"cc": {
															"value": "@variables('emailCc')",
															"type": "Expression"
														},
														"bcc": {
															"value": "@variables('emailBcc')",
															"type": "Expression"
														},
														"attachments": " "
													}
												}
											},
											{
												"name": "Execute Send Email fail to process",
												"type": "ExecutePipeline",
												"dependsOn": [
													{
														"activity": "Proses data after copy",
														"dependencyConditions": [
															"Failed"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "Sending Email",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"from": {
															"value": "@variables('emailFrom')",
															"type": "Expression"
														},
														"to": {
															"value": "@variables('emailTo')",
															"type": "Expression"
														},
														"message_id": {
															"value": "@guid()",
															"type": "Expression"
														},
														"subject": {
															"value": "@concat('Integration FAILED - [', pipeline().RunId,'] - ', item().SourceTable, ' is failed when process ', item().StoreProcedureProcess)",
															"type": "Expression"
														},
														"content": {
															"value": "@concat('Hi, This Integration ', item().SourceTable, ' is success')",
															"type": "Expression"
														},
														"Queue_id": {
															"value": "@variables('emailQueue')",
															"type": "Expression"
														},
														"cc": {
															"value": "@variables('emailCc')",
															"type": "Expression"
														},
														"bcc": {
															"value": "@variables('emailBcc')",
															"type": "Expression"
														},
														"attachments": " "
													}
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"parameters": {
					"TriggerGroup": {
						"type": "string"
					}
				},
				"variables": {
					"secretConfiguration": {
						"type": "String",
						"defaultValue": "azure-sql-prd-report"
					},
					"emailTo": {
						"type": "String",
						"defaultValue": "andreas.herrinto@ccamatil.com"
					},
					"emailCc": {
						"type": "String"
					},
					"emailBcc": {
						"type": "String"
					},
					"emailFrom": {
						"type": "String",
						"defaultValue": "idn.adf.ReportIntegration@ccamatil.com"
					},
					"emailQueue": {
						"type": "String",
						"defaultValue": "664CDAFA44B642DDB511046AFC2C732A"
					}
				},
				"folder": {
					"name": "Production"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CustomerAdditionals - Run Twice a Day')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Copy Data SQL",
							"type": "PipelineReference"
						},
						"parameters": {
							"TriggerGroup": "CustomerAdditionals"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2020-03-17T10:00:00.000Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								10,
								15
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Copy Data SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Customers - 8-11-14-18-20')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Copy Data SQL",
							"type": "PipelineReference"
						},
						"parameters": {
							"TriggerGroup": "Customer"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2020-02-18T15:31:00.000Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								1,
								4,
								7,
								11,
								13
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Copy Data SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Daily Run Trigger Master Data - 1 am')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Copy Data SQL",
							"type": "PipelineReference"
						},
						"parameters": {
							"TriggerGroup": "M-D-1"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2020-01-26T05:11:00.000Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								18
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Copy Data SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Daily Run Trigger Master Data - 3 am')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Copy Data SQL",
							"type": "PipelineReference"
						},
						"parameters": {
							"TriggerGroup": "M-D-3"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2020-01-15T11:48:00.000Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								20
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Copy Data SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Daily Run Trigger Master Data - 6 am')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Copy Data SQL",
							"type": "PipelineReference"
						},
						"parameters": {
							"TriggerGroup": "M-D-6"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2020-03-10T23:00:00.000Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								23
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Copy Data SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Daily Run Trigger Trx - 1 am')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy to Report Database",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Copy Data SQL",
							"type": "PipelineReference"
						},
						"parameters": {
							"TriggerGroup": "T-D-1"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "Integration Run SP",
							"type": "PipelineReference"
						},
						"parameters": {
							"triggerGroup": "D-1"
						}
					},
					{
						"pipelineReference": {
							"referenceName": "OHS",
							"type": "PipelineReference"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2019-08-21T09:10:00.000Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								18
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Copy Data SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Daily Run Trigger Trx - 2 am')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Copy Data SQL",
							"type": "PipelineReference"
						},
						"parameters": {
							"TriggerGroup": "T-D-2"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2020-01-13T09:33:00.000Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								19
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Copy Data SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Daily Run Trigger Trx - 3 am')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Copy Data SQL",
							"type": "PipelineReference"
						},
						"parameters": {
							"TriggerGroup": "T-D-3"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2020-01-26T05:14:00.000Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								20
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Copy Data SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Daily Run Trigger Trx - 4 am')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Copy Data SQL",
							"type": "PipelineReference"
						},
						"parameters": {
							"TriggerGroup": "T-D-4"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2020-01-26T05:16:00.000Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								21
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Copy Data SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Daily Run Trigger Trx 8-11-14-17-20')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Copy Data SQL",
							"type": "PipelineReference"
						},
						"parameters": {
							"TriggerGroup": "T-D-8-11-14-17-20"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2020-02-07T08:43:00.000Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								1,
								4,
								7,
								10,
								13
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Copy Data SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SurveyDetail - 1 am')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Copy Data SQL",
							"type": "PipelineReference"
						},
						"parameters": {
							"TriggerGroup": "SurveyDetail"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2020-02-18T08:54:00.000Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								18
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Copy Data SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SurveyHeader - Every 2 Hour')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Copy Data SQL",
							"type": "PipelineReference"
						},
						"parameters": {
							"TriggerGroup": "SurveyHeader"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 2,
						"startTime": "2020-02-13T07:00:00.000Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Copy Data SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TTF eForm - 5 am')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Copy Data SQL",
							"type": "PipelineReference"
						},
						"parameters": {
							"TriggerGroup": "TTFeForm"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2020-02-15T16:54:00.000Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								22
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Copy Data SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy Data SQL Parallel')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Parallel Group",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[spIntegration_getTriggerGroup]",
								"storedProcedureParameters": {
									"ParallelGroup": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.ParallelGroup",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "GenericAzureSQLDatabase",
								"type": "DatasetReference",
								"parameters": {
									"table": {
										"value": "IntegrationConfigurations",
										"type": "Expression"
									},
									"secret": {
										"value": "@variables('secretConfiguration')",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Parallel Group",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Parallel Group').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Execute Copy Data",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Copy Data SQL",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"TriggerGroup": {
												"value": "@item().TriggerGroup",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"parameters": {
					"ParallelGroup": {
						"type": "string"
					}
				},
				"variables": {
					"secretConfiguration": {
						"type": "String",
						"defaultValue": "azure-sql-prd-report"
					}
				},
				"folder": {
					"name": "Production"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Copy Data SQL')]"
			]
		}
	]
}